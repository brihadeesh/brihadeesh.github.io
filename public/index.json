[{"content":"","date":null,"permalink":"/blog/","section":"blog","summary":"","title":"blog"},{"content":"","date":null,"permalink":"/","section":"peregrinator's blog","summary":"","title":"peregrinator's blog"},{"content":"","date":null,"permalink":"/series/listening-habits/","section":"Series","summary":"","title":"Listening Habits"},{"content":"It\u0026rsquo;s been a while since I wrote for the blog and even longer since I made an end-of-year list but I\u0026rsquo;ve been thinking about these lists. I\u0026rsquo;ve published just one from a couple of years back and then never really published one on the blog and it has been something of a conscious decision. I would perhaps like to move towards writing more meaningful pieces on individual albums or sets of albums I\u0026rsquo;ve been listening to and have gotten to appreciate. Making EOY lists has been exhausting and I\u0026rsquo;m never entirely sure if I\u0026rsquo;ve missed out on any albums since I don\u0026rsquo;t really keep track of what I really enjoyed.\nIn that vein, I\u0026rsquo;d perhaps like to talk about what I\u0026rsquo;ve been listening to off-late. I\u0026rsquo;ve had a bit of a break from work and things have gotten tedious in the place I\u0026rsquo;ve been living in for the last few months. Having to put up with people I don\u0026rsquo;t really want to be around and getting endless unsolicited advice has left me frustrated. And so I\u0026rsquo;ve been listening to a lot of RABM and, in general, black metal such as Mare Cognitum and Paysage d\u0026rsquo;Hiver. Also peep the new and upcoming Bandcamp replacement, Ampwall which Chris Grigg has been developing.\nPaysage d\u0026rsquo;Hiver has been especially dear to me since I discovered them last year and their newest release, Die Berge, clocking in at just an hour unlike Im Wald, my previously favourite album of theirs which was way longer, has been on repeat.\nI\u0026rsquo;ve also been listening to Trhä a little along with other similar raw black metal acts such as Lamp of Murmuur and Wolven Daughter.\nWhat I\u0026rsquo;ve really been listening to # What really has kept me going through this weird time is at the intersection of sludge, hardcore, death metal and black metal. Here\u0026rsquo;s a sample of what kind of music I\u0026rsquo;ve been listening to over the last week, for example. I would like to highlight a few albums and artists from these, and others I listened to recently, over the course of this article.\nRevulsion - Revulsion #I\u0026rsquo;d recently made a more or less permanent switch to Bluesky from Twitter and I\u0026rsquo;ve been talking about and exchanging music with people I\u0026rsquo;ve known from Twitter and new people I\u0026rsquo;ve met. Amongst the albums that came up recently has been Revulsion\u0026rsquo;s self-titled album that was released in February 2021. I picked this up from one of Westin\u0026rsquo;s posts a few weeks back and I\u0026rsquo;ve been obsessed with the title track.\nThe Finnish band, signed to Transcending Obscurity Records, plays a style of death metal that is hard to put into any one sub-genre label. It has elements of the old school Florida style but they refuse to let that hold them back from blending a very strong groove with double kick beats and slightly dissonant guitars.\nLLNN - Unmaker # Tim from Bluesky talks about *-core bands a lot but when he mentioned the sludge band LLNN, which I\u0026rsquo;ve had on my list for a fairly long time, I realised I should check it out. When I did post about it, he replied asking if I could recommend any other similar sounding music. I did suggest bands such as Gaza, Oldspeak, and others that have been in regular rotation for me but it was only when Gary Davidson entered the conversation that we found some very interesting music. More about those in a bit but getting back to Unmaker, it\u0026rsquo;s a phenomenal record that blends elements of sludge with hardcore making it crushingly heavy and oppressive. I\u0026rsquo;d recommend listening to this when one is horrendously frustrated and needs something to help cope with the exasperation that comes with it. This was released in September 2021.\nCoilguns - Odd Love # I\u0026rsquo;ll be very honest that I have no clue what kind of music this is but I just loved how the whole record had a kind of groove that makes you want to just get up and dance. The tags show alternative noise, noise rock, and something to do with punk and hardcore so maybe that might make things clearer. It was another album that Tim mentioned a bunch of times and so I just ended up listening to it. This was released in November 2024.\nAdmiral Angry - Buster # One of Gary\u0026rsquo;s recommendations, this is a really loud and noise-ey sludge record that blows your brains out. Throw it on if you liked LLNN\u0026rsquo;s Unmaker and Primitive Man. The album is from June 2018.\nMICO - Zigurat # I had realised that I hadn\u0026rsquo;t bought Cave Sermon\u0026rsquo;s latest so when I went to their Bandcamp page I saw that they\u0026rsquo;d recommended a few other albums. MICO\u0026rsquo;s Zigurat was one of them. What really drew me to this project was how they\u0026rsquo;d infused sludge with grindcore seamlessly and much like others that play this kind of metal (like Gaza) they\u0026rsquo;d pulled it off spectacularly. I really don\u0026rsquo;t know much about them but they\u0026rsquo;re definitely one of my best finds. The album was released in June 2022.\nLuminesce - Mirrored # There are very few people that are into technical death metal that haven\u0026rsquo;t heard of Alice Simard, a 20 year old Canadian multi-instrumentalist who has one of the most impressive discographies I\u0026rsquo;ve ever come across. Her Metal Archives page should tell you more than enough about that. She typically plays a style of technical death metal that has neoclassical elements amongst other styles but this is a melodic death metal record with some of the most curious production choices. Her death metal records usually have a very prominent bass in the mix and in the case of this album, it elevates the sound to a very nearly magical realm. This record was published on the first day of 2025.\nFilesharemaiden - Veuve # Released in June 2024, this is another phenomenal Alice Simard project that Max Svalgard from the band Sublation introduced me to earlier in 2023. The project has put out a few split LPs of which I had played Uterokinesis. Simard plays a kind of technical death metal with the same prominent bass sound in the mix. She makes a wall of sound with the guitars, drums and vocals on the one hand and that overlaid with the bass sound makes for a very interesting listening experience. It\u0026rsquo;s also interesting that Filesharemaiden has morphed from what used to be a brutal death metal project into this.\nGonemage - Entranced by the Ice Storm # Garry Brents has only put out the best nu-metal since I first got acquainted with them in 2023, when I\u0026rsquo;d come across a post of theirs on Twitter teasing Memorrhage\u0026rsquo;s self-titled debut in a short video. His music has since carved out a regular presence in my listening habits. This EP is a teaser to a new phase of Gonemage, their black metal and chiptune project (yeah, it sounds super fucking interesting), in which they\u0026rsquo;ve moved to a more Emperor and Dødheimsgard-esque sound. I am very excited to hear the full length album that is to follow. The EP was released on the first Friday of this year.\nSallow Moth - Vial # Sallow Moth is Garry\u0026rsquo;s death metal project and this EP from October 2024 is again a prelude to a full-length that is to follow. It\u0026rsquo;s brutal, it\u0026rsquo;s techy, and it\u0026rsquo;s got clean passages. If you enjoyed Stasis Cocoon, this is nothing like it.\nTumultuous Ruin - An Abscess on the Heart of the State # RABM is something I got into fairly recently but this one man project has been a part of my regular listening habits since it came out back in September 2023. I\u0026rsquo;m unable to recall who really put me onto it but I have the strongest feeling that this was something Violet from Wolven Daughter mentioned last year, which then reminded me about how much I enjoyed this.\nFathomless - Fathomless # I found this amongst some of the announcements for new albums on Ampwall that their Bluesky profile posts occasionally and I just wound up listening to it. They play a kind of progressive or technical black metal that is actually not grating. The record came out in September 2024.\nApocalyptic Leaders - Exists in Chaos # Violet from Wolven Daughter was talking about this album on Bluesky, and about something in the water in Greece that makes some of the best black metal in the world. I ended up playing it soon after. A kind of black metal that is aggressive and deathy. It even feels like death metal at some points. The album was released in June 2024\nWell, that\u0026rsquo;s all I\u0026rsquo;ve got for what I\u0026rsquo;ve been listening to off-late. I hope I end up making it a habit to write up pieces like this!\n","date":"January 15 2025","permalink":"/blog/2025/01/no-more-eoy-lists-for-music/","section":"blog","summary":"","title":"No more EOY lists for music"},{"content":"","date":null,"permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":null,"permalink":"/series/living-with-adhd/","section":"Series","summary":"","title":"Living With ADHD"},{"content":" The footnotes point to placeholders currently. I\u0026rsquo;ll fill those in soon.\nI was starkly aware of how my last post, Notes from a withdrawal episode, felt somewhat incomplete but couldn\u0026rsquo;t really figure out what it was that was \u0026ldquo;missing\u0026rdquo; from it. Someone on twitter had asked whether being on the medication was of any help and I responded to this saying it was too large a topic to cover in tweets and that it wasn\u0026rsquo;t something I could address on twitter — it would involve really gathering my thoughts and writing a thread there while doing so perhaps felt daunting at that point. It still took me a while to figure out what was missing from my last post was something of a description of what being on Methylphenidate was like and so I decided to write this post about it as something of a prequel to my last post. Like I\u0026rsquo;d mentioned to the person that had asked that it wasn\u0026rsquo;t as straightforward an answer as good or bad.\nMy psychiatrist had initially started me off on a course of Atomoxetine when I got the diagnosis and it felt like it helped initially, because of the novelty of it, I imagine. Regardless, it took me a while to understand that it wasn\u0026rsquo;t working for me, perhaps owing to the other drug I was on — Sertraline, a powerful SSRI commonly known by its generic name Zoloft — which often left me feeling groggy and exhausted all the time. It was when my doctor started me off on Methylphenidate that I started seeing consistent changes.\nNow this is a powerful stimulant and tricky to procure considering it is an amphetamine. The relationship between ADHD and powerful stimulants is interesting. People with ADHD typically have lower levels of dopamine and vastly limited means to access it.1 Dopamine is the \u0026ldquo;reward\u0026rdquo; hormone and is automatically released by the brain when one does activities they enjoy but this release pathway isn\u0026rsquo;t as reliable or functional for someone with ADHD.2 In order to artificially regulate dopamine levels, stimulants such as amphetamines are used to hack the automatic dopamine-high the drug provides as remedy for dysfunctional dopamine signalling. My doctor got me started on Methylphenidate roughly 8 months back. Lower doses at first, slowly leading up to a steady 40 mg (50 mg more recently).\nInitially, it felt a little exhilarating — possibly owing to the novelty — but I was fairly certain of a difference in how motivated I felt. Creative bursts, or hyperfocus sessions for that matter, were more frequent when I\u0026rsquo;m unmedicated (and not in withdrawal) but they\u0026rsquo;re also notoriously unreliable. They\u0026rsquo;re too random and unpredictable in all senses of the word and any attempts at doing things consistency ultimately fail because the kind of motivation is ultimately moody and manic. Sometimes, a kind of restlessness overpowers my ability to do anything meaningful and I\u0026rsquo;m left annoyed and irritable with my brain on overdrive. The medication, in a sense, helps gather these unmanageable peaks and troughs and even them out into a more steady sort of motivation. Oddly enough, I still find that I\u0026rsquo;m more involved and capable of things that need more creative solutions in some of my unmedicated hyperfocus sessions.\nI\u0026rsquo;m typically well aware of what tasks I\u0026rsquo;m yet to complete and despite that I\u0026rsquo;m almost never able to get myself to do those things unmedicated. I can maybe get one, relatively simple task done in the same short-lived bursts of clarity described earlier but the moment I\u0026rsquo;m done with it, an irritability and often a kind of anxiety sets in, possibly stemming from fatigue. For perhaps the first 2-3 months on the medication, I was able to do some of the larger tasks with ease although I still needed breaks.\nI could also notice, over the course of the entire period of time I was on the medication, how I was significantly less preoccupied with lowered self-esteem and getting carried away into dramatic depressive states triggered by criticism or rejection (rejection sensitive dysphoria)3 — I even found that I was more straightforward with dealing with conversations of the sort that bothered me, especially those involving having my experiences invalidated.\nI need to be constantly stimulated externally — a good coffee in the morning that gets me going and more importantly keeps me alert. I\u0026rsquo;m more dependent on this while I\u0026rsquo;m off the medication. Thinking back on it, a large part of what I look for here is some degree of comfort — as little sources of annoyance and a relatively peaceful space to do things — to be able to work with any amount of consistency. While on medication, these stop being needs.\nThe medication, however, has a few side effects that I\u0026rsquo;ve observed — there are a lot more that one should look out for, some of these often quite serious too.4 The most prominent of these was insomnia. I\u0026rsquo;ve had issues with sleep all along but this worsened for the initial few months on the medication. The only solution that showed promise in dealing with this was to plan and keep to a regular routine. Melatonin could potentially help fall asleep but it made me nauseous on the next day for several hours after waking. This, coupled with intense withdrawal symptoms are perhaps the biggest issues I faced.\nThis doesn\u0026rsquo;t cover everything, nor was it intended to. There are a few things I have consciously omitted for the sake of my own sanity. Regardless, I hope to make this and the other post into a series I keep adding to periodically.\ncitation?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\ncitation?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nexplainer?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\ncitation?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"March 30 2023","permalink":"/blog/2023/03/notes-from-a-withdrawal-episode-part-0/","section":"blog","summary":"","title":"Notes from a withdrawal episode (part 0)"},{"content":" This is a work in progress. You can browse the code on my sourcehut.\n1 Boring themes for the elitist #colourless-themes is a collection of “primarily colourless themes\u0026quot;. This was forked from Tomas Letan\u0026rsquo;s macro of the same name.1\n1.1 Installation #Install this how you would install a package from github - this varies with the flavour of Emacs or the setup in use. If you use a Frankenstein\u0026rsquo;s monster like I use, do:\n(use-package colourless-themes :straight (:host sourcehut :repo \u0026#34;~peregrinator/colourless-themes-el\u0026#34;) :config ;;optionally loading a theme (load-theme \u0026#39;einkless t) 1.2 Usage #Temporarily set it the M-x load-theme , or via M-x customize-themes. To make it persistent, see Installation. Disable any other themes to ensure a colourless experience.\n2 Featured themes #Themes offered besides those from upstream are\nmephistopheles an original dark theme with yellow and green foreground, again inspired by Stanislav Karkavin\u0026rsquo;s vim theme mentioned above. beelzebub A dark, purplish colourscheme based on Stanislav Karkavin\u0026rsquo;s vim theme: vim-beelzebub nofrils, Emacs ports faithful to the original nofrils themes. These have a few more colours than the others. 2.1 Screenshots #WIP\nThe macro is a rework of theirs — an opinionated take perhaps? Find their source code at ~lthms/colorless-themes.el\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"March 19 2023","permalink":"/emacs/colourless_themes.html","section":"emacs","summary":"","title":"Colourless themes for Emacs"},{"content":"","date":null,"permalink":"/emacs/","section":"emacs","summary":"","title":"emacs"},{"content":"I was reading Adrianna\u0026rsquo;s (or \u0026ldquo;Pop22\u0026quot;\u0026rsquo;s) last blog post \u0026lsquo;I Now Have an Attention Span\u0026rsquo; after they asked for new blog feeds they could follow on the fediverse and I realised I wasn\u0026rsquo;t following their blog anywhere — I\u0026rsquo;ve since added it everywhere, including in my openring configuration — and got thinking about a thing or two about my own progress with ADHD over the last four-odd years since my diagnosis. I do see something of an arc in my capacity for regular work and keeping at doing different kinds of work, similar to what they describe, but I\u0026rsquo;m not nearly there yet.\nI find that there are some things I can stay focused on and work through. Sadly these have minimal overlap with what I\u0026rsquo;ve chosen for my career. I like working with computers — fooling around with R, trying to learn e-lisp an figure out Emacs, and well, setting up this blog too — and it\u0026rsquo;s startling to see how little there is in terms of job opportunities that involve any of these within ecology or wildlife science. I realise I\u0026rsquo;m digressing but the point I\u0026rsquo;m trying to make here is that I find that my attention span having improved applies only to a very limited kind of thing.\nIt\u0026rsquo;s been roughly two weeks since I ran out of my medication (Methylphenidate — commonly known as Ritalin or Concerta) and I\u0026rsquo;ve been experiencing some withdrawal symptoms. This is the longest I\u0026rsquo;ve been off this since I got started some six months back. I\u0026rsquo;ve had disturbed sleep (I\u0026rsquo;m writing this at midnight!), heightened anxiety that often manifests as anxiety attacks, and in general rapid mood changes and more but I\u0026rsquo;ve also seen some things that were surprising.\nThe same kinds of work I thought I could do better has become a whole lot easier to do now, while I\u0026rsquo;m in this withdrawal state, for the most part. I also find my thoughts to be clearer and that I no longer miss out on important cues of various kinds. This is quite irregular but is in no way sustainable in the long term for myriad reasons.\n","date":"March 16 2023","permalink":"/blog/2023/03/notes-from-a-withdrawal-episode/","section":"blog","summary":"","title":"Notes from a withdrawal episode"},{"content":"","date":null,"permalink":"/series/blogging-with-emacs/","section":"Series","summary":"","title":"Blogging With Emacs"},{"content":"I wrote to Drew DeVault a couple of days back, after much deliberation on whether I should really bother him and the like, about free access to Sourcehut builds so I could move away from Github and Gitlab. He responded soon after that saying that he\u0026rsquo;d given me a year\u0026rsquo;s access. And I\u0026rsquo;ve finally done it! The blog that started off titled peregrinator\u0026rsquo;s sourcehut site along with an explanation on why it was called that while hosted on Github-pages is finally here! The next step would be to move to a personal or custom domain of my own, but that\u0026rsquo;s a long way into the future, yet.\nIn any case, this brings me closer to what I\u0026rsquo;ve got planned for my internet presence — minimal and without JavaScript. Although I\u0026rsquo;m pleased with how this has simplified a lot of things, this also means a few new things to keep in mind for me and this is perhaps of most interest here.\nGit #I\u0026rsquo;ve been honing my command-line git skills over the last few years but since repository settings are threadbare on Sourcehut, I\u0026rsquo;ll have to really step up my game here. I\u0026rsquo;ve already faced some minor setbacks to my work, on this blog incidentally. I\u0026rsquo;d gitignored the folder with the Org-mode sources for all of my blog posts and other pages and then checked out an older version of my blog posts source from the last commit with the file. Since this was from prior to adding gitignore functionality, it was at-least an entry older with a bunch of crucial changes I\u0026rsquo;d made yesterday. I had to manually recover this eventually.\nMaintaining multiple branches, juggling remotes - since this shares its files with those from my older Github-pages site — all was a bit overwhelming initially but I\u0026rsquo;ve managed to clean up most of the cruft and I\u0026rsquo;m starting to get more confident around git.\nContent restrictions #The biggest \u0026ldquo;hit\u0026rdquo; I\u0026rsquo;ve taken is the restrictions on third-party content - see Albums of the Year, my last post for example. The Sourcehut site documentation states that they disallow external style-sheets, especially those accessed via CDNs but crucially third-party embedded content.1 This shouldn\u0026rsquo;t mean much to most - especially if the content of blog posts is text and some code - but since some of my posts are about music, I find that this restriction gets in my way. I cannot add embedded albums or tracks Bandcamp. Bandcamp is what I prefer when it comes to music since they\u0026rsquo;re the most artist-friendly amongst streaming platforms.2\nI\u0026rsquo;ve since changed my Bandcamp shortcode from a minimal, single positional argument based kind to one that uses an additional URL rendered as a simple link below the iframe. Of course, with Sourcehut pages, the iframe is just a blank rectangle of the same dimensions as the embedded Bandcamp content.\nFind them on \u0026lt;a href=\u0026#34;{{ .Get \u0026#34;url\u0026#34; }}\u0026#34;\u0026gt;Bandcamp\u0026lt;/a\u0026gt; \u0026lt;iframe style=\u0026#34;border: 0; width: 400px; height: 42px;\u0026#34; src=\u0026#34;https://bandcamp.com/EmbeddedPlayer/album={{ .Get \u0026#34;id\u0026#34; }}/size=small/tracklist=false/bgcol=ffffff/linkcol=0687f5/transparent=true/\u0026#34; seamless\u0026gt; \u0026lt;/iframe\u0026gt; See the documentation for Limitations with Sourcehut sites at https://srht.site; the rest don\u0026rsquo;t affect me as much\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCitation?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"March 4 2023","permalink":"/blog/2023/03/moved-to-sourcehut/","section":"blog","summary":"","title":"Moved to Sourcehut!"},{"content":"I dread publishing lists of this kind especially because ranking things was never something I enjoyed and since I have a tendency to forget artists and albums, often even those that I listen to regularly. I also remember bands by sound and almost inevitably refuse to keep track of when artists I like release new music. This is in no sense complete nor could I get myself to write about each of the albums — I’ll perhaps get down to this sometime later. There is no ranking within this list for the same reasons as before\nKEN mode - Null #Exasperated with everything good in life going to dogs? Throw Your Phone in the River! It’s noisy, ambient with an abundance of harsh industrial sounds blended into the background, delivered with bleak, sludgy instrumentation. This time they’re a four piece, with the addition of Kathryn Kerr bringing in the saxophone and it expectedly sounds great with this brand of metal. This release also marks a stylistic shift from their typically outright angry sound to this tinge of despair in the way the vocals are delivered.\nPrimitive Man - Insurmountable #From practitioners of the most brutal form of Death/Sludge arguably pioneered by them, the latest offering from Primitive Man bludgeons the anxieties and dread that came with the pandemic into a slow-burning, gloomy and angry 4 track record. Their sound appears to have been perfected over the years into the combination of oppressive mammoth-like riffs, a loud menacing bass, copious amounts of guitar feedback and noise samples embedded into the background, and drums with the hint of a twang on the snare leaving the listener in an atmosphere dripping with tension and apprehension. McCarthy’s vocals are as wild as ever — there’s undertones of the sludge scream, the black metal snarl, alloyed with the Death-growl into guttural lows and highs. This album also includes a cover of “Quiet” by the Smashing Pumpkins.\nEthan McCarthy’s other project — Vermin Womb — also saw a new release that I’d also recommend. It’s similar sounding in the instrumentation and overall feel but has songs with a more blackened and chaotic Grindcore style.\nDrowse - Wane into It #I know no better words to describe this than lucid dream-like.\nKathryn Mohr - Holly #Liminal perhaps describes the kind of music Kathryn Mohr makes accurately and in a single word but it’s got a lot more to it. I find that listening to this album when I need to unwind makes the process a lot easier and a great deal more enjoyable, but I’m inevitably left craving more. Holly has droney chords strummed on a Jazzmaster (?), fuzzy and exclusively on neck pickups — and I feel like I shouldn’t have to describe this any further but I’ll just add that it takes the edge off the typical bright tone. This perfectly compliments haunting, layered vocals that sometimes sound off-key. The vocals don’t appear to be too central to her sound and songs are often instrumental, overlaid with pretty synth riffs and crucially set in a brown-noise base. Also worth noting is the way tracks are arranged in the style of a cassette release — both sides have short instrumental introductory pieces and is available as a cassette on her Bandcamp!\nChat Pile - God\u0026rsquo;s Country #What hasn’t been said about the Purple man that took the world by storm with their debut album, under the Flenser label, no less. Heavy guitars and skull numbing reverb laden drums thumping out slow and dark songs about despair and the anti-anthem “Why”. Needless to say, I’m sold on the Purple Man.\nMiscreance - Convergence #I came across them when the Dead Neanderthals tweeted\nNot enough people are talking about this album. A perfect mix of Death (Human era), Pestilence (Consvming era) and Revenant!https://t.co/LrJFPwEnBJ\n\u0026mdash; Dead Neanderthals (also on bsky.app) (@deadneanderthal) January 31, 2023 and I’m in full agreement. Being the dedicated Death fan (for life), this does indeed sound like Chuck Schuldiner performed the vocals. Both Pestilence and Death drips off their thrashy, bass-heavy minor key riffs.\nMamaleek - Diner Coffee (?) #As the Flenser repeatedly tweets, Who is Mamaleek?. Weird noisey and dark but it’s really hard to describe them without sounding insane.\nMeshuggah - Immutable #I came to realise they had a new release out when I saw and absurd “meme” video on Youtube. It’s got the usual sick groove but I could have sworn a pronounced blackening to their riffs.\nWormrot - Hiss #It’s got everything a Wormrot album promises in grindcore, but this release felt more mellow as compared to the brutally fast and precise riffing/drums from earlier releases.\nExhumed - To The Dead #Morbidly groovy and detuned Death/Grind, often reminiscent of Carcass’s very old grindcore delivers human entrails yet again. 2022 has been a prolonged fangirling moment for Doktor Ross Sewage and every band he’s played with. His twitter feed is never boring.\nRussian Circles - Gnosis #Post-metal but it often sounds black and heavy.\nWake - Thought Form Descent #There’s no words I can conjure to describe Wake humanly. It’s got everything — sickeningly catchy riffs like grindcore, dark ambient black metal and post-metal — but then there’s so much more. It’s loud and hits you like a tidal wave but is also meditative of sorts.\nHath - All That Was Promised #Modern Death metal that is blackened and sometimes slightly technical. There are mellow passages too but ultimately the album feels not as abstract as older Death metal and betrays a sort of sorrow.\nMares of Thrace - The Exile #This was easily one of the most tension filled, deathy Doom metal records of my year.\nHeriot - Profound Mortality #Hard to pin down but it’s black, hardcore and deranged.\nHexis - Aeturnum #Unabashedly Satanic, these black metallers deliver the loudest and fullest sounding black metal record I’ve heard in a while. The air is heavy and icy but the vocals hit like a draft from a furnace.\nCloud Rat - Threshold #Chaos!\nScarcity - Aveilut #Bleak, just the way post-black metal should be. This was an early contender for the list.\nThou \u0026amp; Mizmor - Myopia #Trepidation and tension does make one myopic. Doom with a good deal of sludge mixed in, this is bleak and heavy.\nthoughtcrimes - Altered Pasts #Chaotic but with some vague semblance to the newer Alice in Chains - post Robert DuVall’s joining. Thoroughly noise like the label indicates.\n","date":"February 27 2023","permalink":"/blog/2023/02/albums-of-the-year-2022/","section":"blog","summary":"","title":"Albums of the Year (2022)"},{"content":"I\u0026rsquo;d decided to make the switch to a blogging workflow that I could use with Emacs back in December and wrote about setting it up from scratch. Since I wasn\u0026rsquo;t yet acquainted with writing original layout templates, style-sheets or with organising content into sections in as simple and sane a manner as I wanted to, I\u0026rsquo;d settled for outsourcing most of this to a fairly basic theme. Over time, I grew dissatisfied with how the site looked and how it organised my content and so I spent some time customising the theme, which took a while to figure out. I wasn\u0026rsquo;t happy with it still. I then tried changing themes a few times but couldn\u0026rsquo;t find anything that really worked for me. That I didn\u0026rsquo;t want any JavaScript I didn\u0026rsquo;t understand, or could understand for that matter, effectively eliminated a lot of the options I had considered.\nIt then dawned on me that I could maybe attempt writing a theme for myself from (nearly) scratch when I found two themes that seemed to check out most of my requirements. The first of these was rocinante by Sid Verma, a great and adequately minimal theme with added support for photo albums as posts. My only qualms with it were the somewhat messy style sheets and cryptic templates that made personalising a bit of an ordeal. The second, however, was simply genius and it took me close to no time to figure it out, despite thinking it to be too advanced for me — there was no theme sub-module and everything was in the home directory it was from somebody\u0026rsquo;s personal website.\nNeedless to say, it was Drew DeVault\u0026rsquo;s and I\u0026rsquo;d seen it as something of an inspiration from the start. A quick glance at Drew Devault\u0026rsquo;s blog should convey what I mean by minimal and functional. I jumped right into a local clone of his sourcehut repo and got down to making it my own. I added some minor spice to the `single.html` layout under `blog` and made an additional few for\nposts from my Wordpress blog I didn\u0026rsquo;t want listed on the homepage a section index that listed the above fiction (just the one post) an About me page (not a section, unlike before) the browser friendly copy of my Literate Emacs Configuration with a table of contents in the sidebar and heading anchors. I realised I didn\u0026rsquo;t want unnecessary taxonomy pages like before or like those from the rocinante theme and that all my regular blog posts, Emacs configuration and fiction on the homepage. The prospect of having to write descriptions for each of these — had I maintained separate sections for each like before — was daunting, to say the least.\nI also loved the idea of displaying \u0026ldquo;featured posts\u0026rdquo; from the blogs I follow through Drew\u0026rsquo;s own openring, written in Go. The only issue I encountered was with adding this to the Github actions workflows since it\u0026rsquo;s not as straightforward as the one Sourcehut uses and the absurdly large number of modules is mind-boggling. Until I find a way of getting this automated, I\u0026rsquo;ll have to keep at running the command manually every few days before committing/pushing changes.\nopenring \\ -s https://drewdevault.com/blog/index.xml \\ -s https://sourcehut.org/blog/index.xml \\ -s https://ambikamath.com/feed/ \\ \u0026lt; webring-in.template \\ \u0026gt; layouts/partials/webring-out.html There were also some issues with date handling in the ox-hugo setup and I ended up rewriting the org-capture template to allow for entries into both the main blog section and the miscellaneous one. The capture template now looks like this:\n(with-eval-after-load \u0026#39;org-capture (defun org-hugo-new-post-capture () \u0026#34;Returns `org-capture\u0026#39; template string for new Hugo post. See `org-capture-templates\u0026#39; for more information.\u0026#34; (let* (;; http://www.holgerschurig.de/en/emacs-blog-from-org-to-hugo/ (date (format-time-string (org-time-stamp-format :long :inactive) (org-current-time))) (title (read-from-minibuffer \u0026#34;Post Title: \u0026#34;)) ;Prompt to enter the post title (fname (org-hugo-slug title)) (section (plist-get org-capture-plist :section)) (lastmod (plist-get org-capture-alist :lastmod))) (mapconcat #\u0026#39;identity `( ,(concat \u0026#34;* DRAFT \u0026#34; title) \u0026#34;:PROPERTIES:\u0026#34; ,(concat \u0026#34;\u0026#34; section) ,(concat \u0026#34;:EXPORT_FILE_NAME: \u0026#34; fname) ,(concat \u0026#34;:EXPORT_HUGO_AUTO_SET_LASTMOD: \u0026#34; lastmod) ;; Enter current date and time ,(concat \u0026#34;:EXPORT_DATE: \u0026#34; date) \u0026#34;:END:\u0026#34; ;; Place the cursor here finally \u0026#34;%?\\n\u0026#34;) \u0026#34;\\n\u0026#34;))) (setq org-capture-templates ;;`org-capture\u0026#39; binding + h \u0026#39;((\u0026#34;h\u0026#34; \u0026#34;Hugo blog post\u0026#34; entry (file+olp \u0026#34;~/my_gits/brihadeesh.github.io/content-org/blog/posts.org\u0026#34; \u0026#34;Posts\u0026#34;) (function org-hugo-new-post-capture) :section \u0026#34;:EXPORT_HUGO_SECTION: blog\u0026#34; :lastmod \u0026#34;t\u0026#34;) ;; `org-capture\u0026#39; binding + m (\u0026#34;m\u0026#34; \u0026#34;Hugo miscellaneous blog post\u0026#34; entry (file+olp \u0026#34;~/my_gits/brihadeesh.github.io/content-org/blog/posts.org\u0026#34; \u0026#34;Miscellaneous\u0026#34;) (function org-hugo-new-post-capture) :section \u0026#34;:EXPORT_HUGO_SECTION: misc\u0026#34; :lastmod \u0026#34;f\u0026#34;)))) That\u0026rsquo;s about it for now. I deliberately kept this brief and avoided discussing a bunch of tangential points like design choices and the \u0026ldquo;criteria\u0026rdquo; for making this the best starting point for my blog. I\u0026rsquo;ll perhaps cover those in later articles.\n","date":"February 23 2023","permalink":"/blog/2023/02/blog-revamp-and-starting-to-understand-hugo-better/","section":"blog","summary":"","title":"Blog revamp and starting to understand Hugo better"},{"content":"Since my laptop is an ancient clay tablet that can barely run Emacs and a couple of other things without everything crashing, I\u0026rsquo;ve had to use a lab workstation with about 128 GB RAM and a fairly new Intel processor for running some of my analyses. It\u0026rsquo;s phenomenally fast for a computer that runs Windows and gets most things done easily. It\u0026rsquo;s only when I run something that\u0026rsquo;s something memory intensive when things really start to get muddled up. I could just be incredibly bad at R programming but boy, it hit 105 GB of the RAM and slowed the hell down. It\u0026rsquo;s been like this since last night and now there\u0026rsquo;s nothing I can do but wait. Surely a Linux or FreeBSD system would have had lower core functioning thresholds for all of this.\nAnother fairly weird detail was that it was set to use a UK keyboard layout unlike almost any PC that\u0026rsquo;s made in these parts. It was so easy to change but almost no-one had it figured until I got here.\n","date":"December 9 2022","permalink":"/blog/2022/12/having-to-use-windows-reluctantly/","section":"blog","summary":"","title":"Having to use Windows, reluctantly"},{"content":"I\u0026rsquo;d decided to give up on my free WordPress blog a while back, after having watched a SystemCrafters video on how to blog from Emacs (d\u0026rsquo;oh, I just have to do everything from Emacs). Of course, daviwil only covered the basics of writing and exporting using Emacs\u0026rsquo; built-in packages and later for deploying it on GitHub / Sourcehut pages. And it took me a good year to get down to making the switch but apparently moving to a new place for work is the motivation it required. It felt like cheating to use Jekyll on GitHub and I wanted something that could be deployed to a Sourcehut site easily too (Sourcehut blocks any CDN-based CSS loaded into the site\u0026rsquo;s HTML) and I wanted something extremely minimal, like Drew Devault\u0026rsquo;s blog but with even fewer frills — no images anywhere except for if a blog post required them. Looking at his blog source, however, made me realise that there was a lot more to that minimalism than one could see.\nBasic setup #This has come through fairly well, so far. I\u0026rsquo;ve got an org-capture setup for this that links up every new entry captured into a master posts file, adding all the relevant info.\n(with-eval-after-load \u0026#39;org-capture (defun org-hugo-new-subtree-post-capture-template () \u0026#34;Returns `org-capture\u0026#39; template string for new Hugo post. See `org-capture-templates\u0026#39; for more information.\u0026#34; (let* ((title (read-from-minibuffer \u0026#34;Post Title: \u0026#34;)) ;Prompt to enter the post title (fname (org-hugo-slug title))) (mapconcat #\u0026#39;identity `( ,(concat \u0026#34;* TODO \u0026#34; title) \u0026#34;:PROPERTIES:\u0026#34; ,(concat \u0026#34;:EXPORT_HUGO_BUNDLE: \u0026#34; fname) \u0026#34;:EXPORT_FILE_NAME: index\u0026#34; \u0026#34;:EXPORT_HUGO_AUTO_SET_LASTMOD: t\u0026#34; \u0026#34;:END:\u0026#34; \u0026#34;%?\\n\u0026#34;) ;Place the cursor here finally \u0026#34;\\n\u0026#34;))) (add-to-list \u0026#39;org-capture-templates \u0026#39;(\u0026#34;h\u0026#34; ;`org-capture\u0026#39; binding + h \u0026#34;Hugo blog post\u0026#34; entry (file+olp \u0026#34;~/my_gits/brihadeesh.github.io/content-org/blog/posts.org\u0026#34; \u0026#34;Posts\u0026#34;) (function org-hugo-new-subtree-post-capture-template)))) Exporting to markdown (Org just doesn\u0026rsquo;t have a good enough support yet), tags and organisation of pages into bundles is handled by ox-hugo 1, 2. The header arguments in the capture template cover everything. With Emacs\u0026rsquo;s .dir-locals.el feature, a file of that name in the home directory of the blog ensures every new entry or modification into the master posts file gets auto-exported to markdown on save. The contents are quite simple.\n;; ~/.dir-locals.el ((\u0026#34;content-org/\u0026#34; . ((org-mode . ((eval . (org-hugo-auto-export-mode))))))) With Emacs\u0026rsquo;s Org mode, this posts file has subheadings under a Posts header, each of which is a blog post and is exported to a sub-directory under ~/content/posts/ as a lone index.md keeping with the page-bundle kind of organisation.\nA tree run for the content directory shows:\n$ tree content content ├── about │ └── index.md ├── emacs │ └── index.md ├── emacs-literate-configuration │ └── index.md ├── _index.md ├── posts │ ├── a-dark-side-to-pets │ │ └── index.md │ ├── introduction │ │ └── index.md │ ├── misunderstanding-evolution │ │ └── index.md │ └── pets-put-in-context │ └── index.md └── publications └── index.md where every sub-directory in the top-level directory has a page of its own while the home-page is the sole _index.md in the same. What I\u0026rsquo;ve got going feels a little hacky but I\u0026rsquo;ll figure this out.\nAutomatic deployment #Hugo, being a static site generator, creates HTML exports into ~/public and this is what the site uses. All major git hosting services have configurable CI/CD for deploying these to the domain and they\u0026rsquo;re run automatically if you have a specific file in either\nthe root directory of the repo for Sourcehut called .build.yml ~/.github/workflows/ for GitHub called anything you want with a .yml extension. Mine uses github-pages and it looks like this:\nname: github pages on: push: branches: - main # Set a branch that will trigger a deployment pull_request: jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == \u0026#39;refs/heads/main\u0026#39; with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public Issues #There\u0026rsquo;s still a lot to fix\nheading anchors on top-level pages are superfluous maybe consider switching to a theme-agnostic setup like Drew\u0026rsquo;s get rid of unnecessary indentation like in the table of contents and headings add anchors even to lower level headers switch to a Sourcehut site (eventually and when I can afford it) Further reading #This is but a blog post written, and edited, within half an hour so I likely haven\u0026rsquo;t covered a lot of important things. I\u0026rsquo;ll add some links to others\u0026rsquo; blog posts that discuss using this or documentation as I come across them.\nDocumentation is at ox-hugo.scripter.co. This is a wonderful package for Emacs written by Kaushal Modi website and GitHub\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nI\u0026rsquo;ve opted for this over go-org, the native Org backend for Hugo since it doesn\u0026rsquo;t support some basic Org syntax exports\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"December 5 2022","permalink":"/blog/2022/12/hugo-org-and-starting-over-at-a-new-blog/","section":"blog","summary":"","title":"Hugo, Org and starting over at a new blog"},{"content":"This is a copy of my literate configuration for Emacs and if you\u0026rsquo;re viewing this anywhere else, don\u0026rsquo;t! Because you can find a readable version on my website. You can also find a source-based version with the rest of my ~/.emacs.d on my sourcehut.\n1 Other init files #These are in my ~/.emacs.d and help load this main configuration.\n1.1 Early init #This creates a file, early-init.el , in ~/.emacs.d. This was stolen from Protesilaos some time back. It still needs work - it\u0026rsquo;s not tangled (by default) yet.\n;;; early-init.el --- Early Init File -*- lexical-binding: t -*- ;; Copyright (c) 2021-2022 pereginator ;; Author: peregrinator \u0026lt;brihadeesh@protonmail.com\u0026gt; ;; URL: https://git.sr.ht/~peregrinator/dotfiles Version: 0.1.0 ;; Package-Requires: ((emacs \u0026#34;28.1\u0026#34;)) ;; This file is NOT part of GNU Emacs. ;; This file is free software: you can redistribute it and/or modify ;; it under the terms of the GNU General Public License as published ;; by the Free Software Foundation, either version 3 of the License, ;; or (at your option) any later version. This file is distributed in ;; the hope that it will be useful, but WITHOUT ANY WARRANTY; without ;; even the implied warranty of MERCHANTABILITY or FITNESS FOR A ;; PARTICULAR PURPOSE. See the GNU General Public License for more ;; details. You should have received a copy of the GNU General Public ;; License along with this file. If not, see ;; \u0026lt;http://www.gnu.org/licenses/\u0026gt;. ;;; Commentary: ;; Prior to Emacs 27, the `init.el\u0026#39; was supposed to handle the ;; initialisation of the package manager, by means of calling ;; `package-initialize\u0026#39;. Starting with Emacs 27, the default ;; behaviour is to start the package manager before loading the init ;; file. ;;; Code: ;; Don\u0026#39;t initialise installed packages cause package.el sucks balls (setq package-enable-at-startup nil) ;; Do not resize the frame at this early stage. (setq frame-inhibit-implied-resize t) ;; Disable GUI elements ; Disable menu-bar, tool-bar, and scroll-bar. ;;(if (fboundp \u0026#39;menu-bar-mode) (menu-bar-mode -1)) (if (fboundp ;;\u0026#39;tool-bar-mode) (tool-bar-mode -1)) (if (fboundp \u0026#39;scroll-bar-mode) ;;(scroll-bar-mode -1)) (setq inhibit-splash-screen t) (setq ;;use-dialog-box nil) ; only for mouse events (setq use-file-dialog ;;nil) (setq inhibit-startup-screen t) (setq inhibit-startup-buffer-menu t) ;; for when I upgrade to emacs28 with native compilation (setq native-comp-async-report-warnings-errors nil) ;;; early-init.el ends here 1.2 init.el #I\u0026rsquo;ve changed things up a little - this now includes the package management code and the code for org installation.\n;;; init.el --- Initialization. -*- lexical-binding: t; -*- ;; Copyright (C) 2022 peregrinator ;; This file is NOT part of GNU Emacs. ;; This file is free software. ;; Author: peregrinator \u0026lt;brihadeesh@protonmail.com\u0026gt; ;; URL: https://git.sr.ht/~peregrinator/.emacs.d ;; Package-Requires: ((emacs \u0026#34;28.1\u0026#34;)) ;;; Commentary: ;; This file provides the initialization configuration. ;;; Code: ;; Make emacs startup faster (defvar startup/file-name-handler-alist file-name-handler-alist) (setq file-name-handler-alist nil) (defun startup/revert-file-name-handler-alist () \u0026#34;Revert file name handler alist.\u0026#34; (setq file-name-handler-alist startup/file-name-handler-alist)) (add-hook \u0026#39;emacs-startup-hook \u0026#39;startup/revert-file-name-handler-alist) ;; For performance (setq read-process-output-max (* 1024 1024)) ;; 1mb (setq process-adaptive-read-buffering nil) ;; Load newer .elc or .el (setq load-prefer-newer t) 1.2.1 Package management #Update: \u0026lt;2022-11-21 Mon\u0026gt; I\u0026rsquo;ve moved all of this and some other stuff (garbage collection etc) to the init.el. See the initial org-mode installation section below for more.\n1.2.1.1 Setup straight.el #I\u0026rsquo;ll be using use-package to organise and configure individual packages into neater code blocks although the download will be handled by straight.el. I\u0026rsquo;ve included the org-installation here since there\u0026rsquo;s somehow always an issue with version mismatch.\n;;; Configure `straight.el\u0026#39; ;; fetch developmental version of `straight.el\u0026#39; (setq straight-repository-branch \u0026#34;develop\u0026#34; ;; redirect all package repos and builddirs elsewhere straight-base-dir \u0026#34;~/.cache/\u0026#34;) ;; Bootstrap straight.el (defvar bootstrap-version) (let ((bootstrap-file (expand-file-name \u0026#34;straight/repos/straight.el/bootstrap.el\u0026#34; \u0026#34;~/.cache\u0026#34;)) (bootstrap-version 6)) (unless (file-exists-p bootstrap-file) (with-current-buffer (url-retrieve-synchronously \u0026#34;https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el\u0026#34; \u0026#39;silent \u0026#39;inhibit-cookies) (goto-char (point-max)) (eval-print-last-sexp))) (load bootstrap-file nil \u0026#39;nomessage)) ;;; Configure straight.el (contd.) ;; make all use-package instances use straight.el (setq straight-use-package-by-default t ;; clone depth (probably to save space) straight-vc-git-default-clone-depth 1 ;; Define when to check for package modifications, ;; for improved straight.el startup time. straight-check-for-modifications nil ;; use elpa straight-recipes-gnu-elpa-use-mirror t straight-host-usernames \u0026#39;((github . \u0026#34;brihadeesh\u0026#34;) (gitlab . \u0026#34;peregrinator\u0026#34;))) 1.2.1.2 Install and configure use-package #use-package is installed and managed by straight.el and in turn packages used in this config are managed/organized by use-package. There\u0026rsquo;s something to do with integration with use-package on the straight.el readme\n;; Install use-package with straight.el (straight-use-package \u0026#39;use-package) DISABLED 1.2.1.3 Use-package v2 related changes #Need to figure this out - I think maybe use-package might not be updated\n(eval-when-compile (require \u0026#39;use-package)) (require \u0026#39;diminish) (require \u0026#39;bind-key) DISABLED 1.2.1.4 Minimal package.el setup only to browse packages #Running package-list-packages includes them only for browsing\n(require \u0026#39;package) (add-to-list \u0026#39;package-archives \u0026#39;(\u0026#34;melpa\u0026#34; . \u0026#34;https://melpa.org/packages/\u0026#34;)) 1.2.2 Initial Org-mode installation #I use the latest version of Org, pulled from the gnu-elpa repositories and have to install it early on so straight.el / use-package don\u0026rsquo;t give me trouble with version conflicts because it loads the built in (older) version first.\n;; install org \u0026amp; org-contrib (straight-use-package \u0026#39;org) ;; (require \u0026#39;org) (straight-use-package \u0026#39;org-contrib) ;; Load configuration.org (when (file-readable-p (concat user-emacs-directory \u0026#34;configuration.org\u0026#34;)) (org-babel-load-file (concat user-emacs-directory \u0026#34;configuration.org\u0026#34;))) 1.2.3 End # ;;; init.el ends here 2 Header #Just the usual header for elisp files that Emacs keeps complaining about.\n;;; configuration.el --- Initialisation. -*- lexical-binding: t; -*- ;; Copyright (C) 2022 peregrinator ;; Author: peregrinator \u0026lt;brihadeesh@protonmail.com\u0026gt; ;; URL: https://git.sr.ht/~peregrinator/.emacs.d ;; Package-Requires: ((emacs \u0026#34;28.1\u0026#34;)) ;; This file is NOT part of GNU Emacs. ;; This file is free software: you can redistribute it and/or modify ;; it under the terms of the GNU General Public License as published ;; by the Free Software Foundation, either version 3 of the License, ;; or (at your option) any later version. This file is distributed in ;; the hope that it will be useful, but WITHOUT ANY WARRANTY; without ;; even the implied warranty of MERCHANTABILITY or FITNESS FOR A ;; PARTICULAR PURPOSE. See the GNU General Public License for more ;; details. You should have received a copy of the GNU General Public ;; License along with this file. If not, see ;; \u0026lt;http://www.gnu.org/licenses/\u0026gt;. ;;; Commentary: ;; This file provides the initialization configuration tangled this ;; file. ;;; Code: 3 Prerequisites #3.1 Reload Emacs configuration #I\u0026rsquo;m not sure I understand how this works entirely but joseph8th\u0026rsquo;s repo suggests using M-: (load-file user-init-file) RET or evaluating that same function interactively. I\u0026rsquo;ve modified the sanemacs reload config function below hoping that it works but in that doesn\u0026rsquo;t happen, this first code block can be evaluated using C-c C-c:\n(defun reload-config () (interactive) (load-file user-init-file)) 3.2 Ensure UTF-8 #(set-language-environment \u0026#39;utf-8) (prefer-coding-system \u0026#39;utf-8) 3.3 Whoami #(setq user-full-name \u0026#34;peregrinator\u0026#34; user-mail-address \u0026#34;brihadeesh@protonmail.com\u0026#34;) 4 Writing #4.1 Org-mode # Get the damn thing first Organise the thing - needs splitting into multiple code blocks. Moved the installation to init.el along with the straight.el bootstrap to avoid conflicts with the bundled version of the package. I think this can go back to being a regular use-package function but I\u0026rsquo;m desperately avoiding having to debug init any further.\n(require \u0026#39;org) (setq initial-major-mode \u0026#39;org-mode org-display-inline-images t org-redisplay-inline-images t org-image-actual-width nil org-startup-with-inline-images \u0026#34;inlineimages\u0026#34; org-catch-invisible-edits \u0026#39;smart org-pretty-entities t ;; sub-headings inherit properties set at parent level ;; headings org-use-property-inheritance t ;; org-ellipsis \u0026#34; ▾\u0026#34; ;; hide markers for bold, italic, etc and trailing stars org-hide-emphasis-markers t ;; fontify code in code blocks org-src-fontify-natively t org-fontify-quote-and-verse-blocks t ;; org-src-tab-acts-natively t ;; org-edit-src-content-indentation 2 org-hide-block-startup nil org-src-preserve-indentation nil org-edit-src-content-indentation 0 ;; allow for increased space between org ;; org-cycle-separator-lines -1 ;; hard indentation ;; org-adapt-indentation t ;; increase indentation by using odd header levels only ;; org-odd-levels-only t ;; org-startup-folded \u0026#39;content org-capture-bookmark nil org-hide-leading-stars t ;; org-modern org-tags-column -80 org-ellipsis \u0026#34; ▾\u0026#34; org-special-ctrl-a/e t ;; org-insert-heading-respect-content t ;; display numbers instead of bullets for headings ;; org-num-mode t ;; faster (single-key) navigation in org-mode ;; type `?\u0026#39; for help ;; org-use-speed-commands t ) 4.1.1 Refile #;;(setq org-modules ;; \u0026#39;(org-crypt ;; org-habit ;; org-bookmark ;; org-eshell ;; org-irc)) (setq org-refile-targets \u0026#39;((nil :maxlevel . 5) (org-agenda-files :maxlevel . 5))) (setq org-outline-path-complete-in-steps nil) (setq org-refile-use-outline-path t) ;; get something like this for regular emacs bindings ;;(evil-define-key \u0026#39;(normal insert visual) org-mode-map (kbd \u0026#34;C-j\u0026#34;) \u0026#39;org-next-visible-heading) ;;(evil-define-key \u0026#39;(normal insert visual) org-mode-map (kbd \u0026#34;C-k\u0026#34;) \u0026#39;org-previous-visible-heading) ;;(evil-define-key \u0026#39;(normal insert visual) org-mode-map (kbd \u0026#34;M-j\u0026#34;) \u0026#39;org-metadown) ;;(evil-define-key \u0026#39;(normal insert visual) org-mode-map (kbd \u0026#34;M-k\u0026#34;) \u0026#39;org-metaup) ;; Replace list hyphen with dot ;; (font-lock-add-keywords \u0026#39;org-mode ;; \u0026#39;((\u0026#34;^ *\\\\([-]\\\\) \u0026#34; ;; (0 (prog1 () (compose-region (match-beginning 1) (match-end 1) \u0026#34;•\u0026#34;)))))) 4.1.2 Fixed pitch for everything code # ;; Make sure org-indent face is available (require \u0026#39;org-indent) ;; Ensure that anything that should be fixed-pitch in Org files appears that way (set-face-attribute \u0026#39;org-block nil :inherit \u0026#39;fixed-pitch) (set-face-attribute \u0026#39;org-table nil :inherit \u0026#39;fixed-pitch) (set-face-attribute \u0026#39;org-formula nil :inherit \u0026#39;fixed-pitch) (set-face-attribute \u0026#39;org-code nil :inherit \u0026#39;(shadow fixed-pitch)) (set-face-attribute \u0026#39;org-indent nil :inherit \u0026#39;(org-hide fixed-pitch)) (set-face-attribute \u0026#39;org-verbatim nil :inherit \u0026#39;(shadow fixed-pitch)) (set-face-attribute \u0026#39;org-special-keyword nil :inherit \u0026#39;(font-lock-comment-face fixed-pitch)) (set-face-attribute \u0026#39;org-meta-line nil :inherit \u0026#39;(font-lock-comment-face fixed-pitch)) (set-face-attribute \u0026#39;org-checkbox nil :inherit \u0026#39;fixed-pitch) 4.1.3 Quick source block templates #These can be run by typing an angle bracket with the shortcut and hitting \u0026lt;TAB\u0026gt;.\n;; block templates ;; This is needed as of Org 9.2 (require \u0026#39;org-tempo) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;sh\u0026#34; . \u0026#34;src sh\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;el\u0026#34; . \u0026#34;src emacs-lisp\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;li\u0026#34; . \u0026#34;src lisp\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;sc\u0026#34; . \u0026#34;src scheme\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;r\u0026#34; . \u0026#34;src R\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;py\u0026#34; . \u0026#34;src python\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;lua\u0026#34; . \u0026#34;src lua\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;yml\u0026#34; . \u0026#34;src yaml\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;json\u0026#34; . \u0026#34;src json\u0026#34;)) (add-to-list \u0026#39;org-structure-template-alist \u0026#39;(\u0026#34;aw\u0026#34; . \u0026#34;src awk\u0026#34;)) This creates a unique problem wherein the auto-pairing functionality (electric-pair-mode) creates matching right angle bracket at the end of the block, messing with Org syntax. This doesn\u0026rsquo;t work as intended and needs some debugging.\n;; disable electric pairing for angle bracket (add-hook \u0026#39;org-mode-hook (lambda () (setq-local electric-pair-inhibit-predicate `(lambda (c) (if (char-equal c ?\u0026lt;) t (,electric-pair-inhibit-predicate c))))))) TODO 4.1.4 Babel #This might require org-contrib.\n(org-babel-do-load-languages \u0026#39;org-babel-load-languages \u0026#39;((emacs-lisp . t) (R . t) (lisp . t) (shell . t) (org .t) (awk . t))) 4.1.5 New folding backend #This came with the Org 9.6 release on \u0026lt;2022-11-29 Tue\u0026gt; and I got the tea from the Org changes post. This is optimised for files that are large, and usually more than a few MB in size. I know this file is only a few kilobytes but I kinda feel it lagging once in a while. Probably some unrelated issue.\n(setq org-fold-core-style \u0026#39;overlays) TODO 4.1.6 Sources for agenda tasks #Generates an agenda from wildcarded org files from the specified directory\n(setq org-agenda-files (file-expand-wildcards \u0026#34;~/docmuents/denotes/*.org\u0026#34;)) 4.1.7 Tags and todo-keywords config #Todo-keywords are things like TODO and DONE and so on. Tags are for classifying stuff by the general theme of what\u0026rsquo;s being talked about.\n4.1.7.1 todo-keywords # (setq org-todo-keywords \u0026#39;((sequence \u0026#34;TODO(t)\u0026#34; \u0026#34;|\u0026#34; \u0026#34;DISABLED(f)\u0026#34;) (sequence \u0026#34;TODO(t)\u0026#34; \u0026#34;|\u0026#34; \u0026#34;CANCELLED(c)\u0026#34;) (sequence \u0026#34;DRAFT(e)\u0026#34; \u0026#34;|\u0026#34; \u0026#34;DONE(d)\u0026#34;))) Add property drawer disabling source block when TODO-state is DISABLED\n(defun peremacs/autodisable-srcblock-on-disabled () (interactive) (when (equal (org-get-todo-state) \u0026#34;DISABLED\u0026#34;) (org-set-property \u0026#34;HEADER_ARGS\u0026#34; \u0026#34;tangle no\u0026#34;)) ;; (org-set-property \u0026#34;VISIBIITY\u0026#34; \u0026#34;folded\u0026#34;) (unless (equal (org-get-todo-state) \u0026#34;DISABLED\u0026#34;) (org-delete-property \u0026#34;HEADER_ARGS\u0026#34;))) ;; (org-delete-property \u0026#34;VISIBILITY\u0026#34;))) (add-hook \u0026#39;org-after-todo-state-change-hook \u0026#39;peremacs/autodisable-srcblock-on-disabled) DISABLED 4.1.7.2 tags #(setq org-tag-alist \u0026#39;(((\u0026#34;misc\u0026#34; . ?m) (\u0026#34;emacs\u0026#34; . ?e) (\u0026#34;dotfiles\u0026#34; . ?d) (\u0026#34;work\u0026#34; . ?w) (\u0026#34;chore\u0026#34; . ?c) (\u0026#34;blog\u0026#34; . ?b) ))) 4.1.8 Org-capture and agenda #Global keybinding for org-capture\n;; (global-set-key (kbd \u0026#34;C-c l\u0026#34;) #\u0026#39;org-store-link) (global-set-key (kbd \u0026#34;C-c a\u0026#34;) #\u0026#39;org-agenda) (global-set-key (kbd \u0026#34;C-c c\u0026#34;) #\u0026#39;org-capture) This will need to be looked at carefully. Roughly, I need to work out if I\u0026rsquo;m going to be using org-agenda and if so, how will I be using it. Adding tasks can be made much easier with this. I can also use this for entering entries into org-journal, making it a whole deal easier. Perhaps to start off, the org-mode tutorial might be a good place to start. I\u0026rsquo;ve also got a simple enough config from a reddit post in my unused local elisp libs too.\nDISABLED 4.1.9 em- and en-dashes #I realised I use em-dashes a lot — this is perhaps one way to make sure that em-dashes can be generated with double dashes in sequence. I actually just use a remapped compose key (R_ALT is remapped to compose) and compose + --- gives me an em-dash.\n;; Replace two consecutive hyphens with the en-dash ;; (add-hook \u0026#39;org-mode-hook (lambda () (push \u0026#39;(\u0026#34;--\u0026#34; . ?–) prettify-symbols-alist))) ;; Replace two consecutive hyphens with the em-dash (add-hook \u0026#39;org-mode-hook (lambda () (push \u0026#39;(\u0026#34;--\u0026#34; . ?—) prettify-symbols-alist))) DISABLED 4.1.10 Write org-log into drawer #Every time I change the TODO-keywords for a heading, there\u0026rsquo;s a list entry added on top of the text under the heading with a state-change date stamp and more information. This should ensure such logs should be entered into a drawer like those that ox-hugo uses.\n(setq org-log-into-drawer LOGBOOK) 4.1.11 Backlinks / org-super-links # (use-package org-super-links :straight (org-super-links :type git :host github :repo \u0026#34;toshism/org-super-links\u0026#34; :branch \u0026#34;develop\u0026#34;) :bind ((\u0026#34;C-c s s\u0026#34; . org-super-links-link) (\u0026#34;C-c s l\u0026#34; . org-super-links-store-link) (\u0026#34;C-c s C-l\u0026#34; . org-super-links-insert-link))) 4.1.12 Display features #In the spirit of reclaiming some semblance of organisation in this file, I\u0026rsquo;ve tried to group settings by the what aspect they change. Hopefully this continues and the rest of the Org mode configuration can be split up.\n4.1.12.1 Autoindent/autofill turned on automatically # (add-hook \u0026#39;org-mode-hook \u0026#39;org-indent-mode) (setq org-indent-indentation-per-level 3) (setq org-startup-indented t) ;; organise paragraphs automatically (add-hook \u0026#39;org-mode-hook \u0026#39;turn-on-auto-fill) 4.1.12.2 Minad\u0026rsquo;s modern UI for org-mode #Was maintaining a fork but I guess it\u0026rsquo;s too much work - should considering getting back at it sometime. I was having issues with TODO keywords and tags/categories being rendered absurdly small but apparently setting org-modern-label-border to nil should make them full sized (see this issue). I really must consider using a variable-pitch font for rich text and headers while restricting fixed-pitch fonts to header arguments, source blocks and explicitly code segments in text.\n(use-package org-modern ;; currently outdated/unmaintained fork ;; :straight (:host github :repo \u0026#34;brihadeesh/org-modern\u0026#34;) :config ;; Add frame borders and window dividers (modify-all-frames-parameters \u0026#39;((right-divider-width . 10) (internal-border-width . 5))) (dolist (face \u0026#39;(window-divider window-divider-first-pixel window-divider-last-pixel)) (face-spec-reset-face face) (set-face-foreground face (face-attribute \u0026#39;default :background))) (set-face-background \u0026#39;fringe (face-attribute \u0026#39;default :background)) ;; `org-modern\u0026#39; specific config (setq org-modern-star [\u0026#34;◉ \u0026#34; \u0026#34;○ \u0026#34; \u0026#34;● \u0026#34; \u0026#34;○ \u0026#34; \u0026#34;● \u0026#34; \u0026#34;○ \u0026#34; \u0026#34;● \u0026#34;] org-modern-label-border nil) ;; enable the global mode (global-org-modern-mode t)) 4.1.12.3 Display emphasis markers on hover #This package makes it much easier to edit Org documents when org-hide-emphasis-markers is turned on. It temporarily shows the emphasis markers around certain markup elements when you place your cursor inside of them. No more fumbling around with = and * characters!\n(use-package org-appear :hook (org-mode . org-appear-mode)) 4.1.12.4 Better commenting in org-mode code-blocks #Got this from a Stack Exchange answer to work around messed up commenting using the default C-x C-; command. The older/default command messes up lines, undos, and sometimes comment syntax as well.\n;; allow comment region in the code edit buffer (according to language) (defun my-org-comment-dwim (\u0026amp;optional arg) (interactive \u0026#34;P\u0026#34;) (or (org-babel-do-key-sequence-in-edit-buffer (kbd \u0026#34;M-;\u0026#34;)) (comment-dwim arg))) ;; make `C-c C-v C-x M-;\u0026#39; more convenient (define-key org-mode-map (kbd \u0026#34;M-;\u0026#34;) \u0026#39;my-org-comment-dwim) 4.1.12.5 TOC for org-mode files #(use-package toc-org :after org :hook (org-mode . toc-org-enable)) Alternatively\n(use-package org-make-toc :hook (org-mode . org-make-toc-mode)) 4.1.12.6 Convert all org-keywords/block identifiers to lowercase #It\u0026rsquo;s always nice to see random people online that are crazy like you and are nice enough to write elisp code for the shit you need. Stolen from Kaushal Modi\n(defun peremacs/lower-case-org-keywords () \u0026#34;Lower case Org keywords and block identifiers. Example: \\\u0026#34;#+TITLE\\\u0026#34; -\u0026gt; \\\u0026#34;#+title\\\u0026#34; \\\u0026#34;#+BEGIN_EXAMPLE\\\u0026#34; -\u0026gt; \\\u0026#34;#+begin_example\\\u0026#34; Inspiration: https://code.orgmode.org/bzg/org-mode/commit/13424336a6f30c50952d291e7a82906c1210daf0.\u0026#34; (interactive) (save-excursion (goto-char (point-min)) (let ((case-fold-search nil) (count 0)) ;; Match examples: \u0026#34;#+foo bar\u0026#34;, \u0026#34;#+foo:\u0026#34;, \u0026#34;=#+foo=\u0026#34;, \u0026#34;~#+foo~\u0026#34;, ;; \u0026#34;‘#+foo’\u0026#34;, \u0026#34;“#+foo”\u0026#34;, \u0026#34;,#+foo bar\u0026#34;, ;; \u0026#34;#+FOO_bar\u0026lt;eol\u0026gt;\u0026#34;, \u0026#34;#+FOO\u0026lt;eol\u0026gt;\u0026#34;. (while (re-search-forward \u0026#34;\\\\(?1:#\\\\+[A-Z_]+\\\\(?:_[[:alpha:]]+\\\\)*\\\\)\\\\(?:[ :=~’”]\\\\|$\\\\)\u0026#34; nil :noerror) (setq count (1+ count)) (replace-match (downcase (match-string-no-properties 1)) :fixedcase nil nil 1)) (message \u0026#34;Lower-cased %d matches\u0026#34; count)))) 4.2 AUCTex for LaTex editing + completion #;; FIXME: ;; (use-package auctex ;; :init ;; (setq TeX-auto-save t) ;; (setq TeX-parse-self t) ;; (setq-default TeX-master nil)) (use-package auctex :demand t :no-require t :mode (\u0026#34;\\\\.tex\\\\\u0026#39;\u0026#34; . TeX-latex-mode) :config (defun latex-help-get-cmd-alist () ;corrected version: \u0026#34;Scoop up the commands in the index of the latex info manual. The values are saved in `latex-help-cmd-alist\u0026#39; for speed.\u0026#34; ;; mm, does it contain any cached entries (if (not (assoc \u0026#34;\\\\begin\u0026#34; latex-help-cmd-alist)) (save-window-excursion (setq latex-help-cmd-alist nil) (Info-goto-node (concat latex-help-file \u0026#34;Command Index\u0026#34;)) (goto-char (point-max)) (while (re-search-backward \u0026#34;^\\\\* \\\\(.+\\\\): *\\\\(.+\\\\)\\\\.\u0026#34; nil t) (let ((key (buffer-substring (match-beginning 1) (match-end 1))) (value (buffer-substring (match-beginning 2) (match-end 2)))) (add-to-list \u0026#39;latex-help-cmd-alist (cons key value)))))) latex-help-cmd-alist) (add-hook \u0026#39;TeX-after-compilation-finished-functions #\u0026#39;TeX-revert-document-buffer)) ;; (use-package company-auctex) 4.3 Spellcheck #4.3.1 Hunspell #Finally figured this out from a reddit post from 2019.\n;; flyspell + aspell?? (setq ispell-dictionary \u0026#34;en_GB\u0026#34;) (setq ispell-program-name \u0026#34;hunspell\u0026#34;) ;; below two lines reset the the hunspell to it STOPS querying locale! ;; (setq ispell-local-dictionary \u0026#34;en_GB\u0026#34;) ; \u0026#34;en_GB\u0026#34; is key to lookup in `ispell-local-dictionary-alist` ;; tell ispell that apostrophes are part of words ;; and select Bristish dictionary ;; (setq ispell-local-dictionary-alist ;; (quote (\u0026#34;UK_English\u0026#34; \u0026#34;[[:alpha:]]\u0026#34; \u0026#34;[^[:alpha:]]\u0026#34; \u0026#34;[\u0026#39;’]\u0026#34; t (\u0026#34;-d\u0026#34; \u0026#34;en_GB\u0026#34;) nil utf-8))) ;; hook for text mode (add-hook \u0026#39;text-mode-hook \u0026#39;flyspell-mode) ;; hook to check spelling for comments in code (add-hook \u0026#39;prog-mode-hook \u0026#39;flyspell-prog-mode) 4.3.2 Aspell based spellchecking #\u0026hellip; because Void linux keeps complaining about not being able to find a British English dictionary\n(setq ispell-program-name \u0026#34;aspell\u0026#34;) ;; Please note ispell-extra-args contains ACTUAL parameters passed to aspell (setq ispell-extra-args \u0026#39;(\u0026#34;--sug-mode=ultra\u0026#34; \u0026#34;--lang=en_GB\u0026#34;)) ;; hook for text mode (add-hook \u0026#39;text-mode-hook \u0026#39;flyspell-mode) ;; hook to check spelling for comments in code (add-hook \u0026#39;prog-mode-hook \u0026#39;flyspell-prog-mode) 4.3.3 flyspell-correct provides a more refines UI for spelling checking #This shows a popup like for completions when it finds a misspelled word which makes it somewhat more accessible when writing, rather than having to look down at the message area.\n(use-package flyspell-correct :after flyspell :bind (:map flyspell-mode-map (\u0026#34;C-;\u0026#34; . flyspell-correct-wrapper))) (use-package flyspell-correct-popup :after flyspell-correct) 4.4 Something like scrivener from Mac #\u0026hellip;cause I\u0026rsquo;m gonna become a novelist and/or write large books in the near future\n(use-package binder) ;; (use-package binder-tutorial) 4.5 Blogging #I\u0026rsquo;ve defined some stuff necessary to make editing a Hugo website easier.\n4.5.1 ox-hugo since the go-org keep wrecking up links #My personal static site was/is written with this. I might have to add additional setup to add some of this functionality for project pages but then I hope to eventually move everything to sourcehut or atleast using it to host a website on my own domain.\nThis source block continues into the next section.\n(use-package ox-hugo :after ox) Additional setup for streamlining writing posts on the static site:\n4.5.1.1 Blogging flow #Based on the capture templates documentation.\nThis function is called on invoking the org-capture (see next section). This particular function adds a date below the header marked CLOSED which on export to markdown is converted to a regular date field by ox-hugo and is included in the single page view/posts list on the final export. It also changes the TODO tag to DONE. I\u0026rsquo;m still trying to figure out bundles so this might change soon.\nSince the provided template runs independent of my git repo for the website, I\u0026rsquo;ll have to figure out the file variable and how to point it to the /content-org/blog/posts.org file in the repo. From the original ox-hugo docs code, this is the first template provided, (from under the entry variable in the source block below):\nIt is assumed that below file is present in org-directory and that it has a \u0026ldquo;Blog Ideas\u0026rdquo; heading. It can even be a symlink pointing to the actual location of all-posts.org!\nSo I\u0026rsquo;ll change the target to point to my file in the repo directly until I can assign specific (programmatic ?) definitions for the repo in this configuration somewhere.\n(with-eval-after-load \u0026#39;org-capture (defun org-hugo-new-post-capture () \u0026#34;Returns `org-capture\u0026#39; template string for new Hugo post. See `org-capture-templates\u0026#39; for more information.\u0026#34; ;; http://www.holgerschurig.de/en/emacs-blog-from-org-to-hugo/ (let* ((date (format-time-string (org-time-stamp-format :long :inactive) (org-current-time))) (title (read-from-minibuffer \u0026#34;Post Title: \u0026#34;)) ;Prompt to enter the post title (fname (org-hugo-slug title)) (section (plist-get org-capture-plist :section))) (mapconcat #\u0026#39;identity `( ,(concat \u0026#34;* DRAFT \u0026#34; title) \u0026#34;:PROPERTIES:\u0026#34; ,(concat \u0026#34;\u0026#34; section) ,(concat \u0026#34;:EXPORT_FILE_NAME: \u0026#34; fname) ;; ,(concat \u0026#34;:EXPORT_HUGO_AUTO_SET_LASTMOD: \u0026#34; lastmod) ;; Enter current date and time ,(concat \u0026#34;:EXPORT_DATE: \u0026#34; date) \u0026#34;:END:\u0026#34; ;; Place the cursor here finally \u0026#34;%?\\n\u0026#34;) \u0026#34;\\n\u0026#34;))) (setq org-capture-templates ;;`org-capture\u0026#39; binding + h \u0026#39;((\u0026#34;b\u0026#34; \u0026#34;Hugo blog post\u0026#34; entry (file+olp \u0026#34;~/my_gits/blog/content-org/blog/posts.org\u0026#34; \u0026#34;Posts\u0026#34;) (function org-hugo-new-post-capture) :section \u0026#34;:EXPORT_HUGO_SECTION: blog\u0026#34; ) ;; `org-capture\u0026#39; binding + m (\u0026#34;m\u0026#34; \u0026#34;Hugo miscellaneous blog post\u0026#34; entry (file+olp \u0026#34;~/my_gits/blog/content-org/blog/posts.org\u0026#34; \u0026#34;Miscellaneous\u0026#34;) (function org-hugo-new-post-capture) :section \u0026#34;:EXPORT_HUGO_SECTION: misc\u0026#34; )))) 4.6 Olivetti / distraction-free writing # (use-package olivetti :init (setq olivetti-body-width .67) :config (defun distraction-free () \u0026#34;Distraction-free writing environment\u0026#34; (interactive) (if (equal olivetti-mode nil) (progn (window-configuration-to-register 1) (delete-other-windows) ;; (text-scale-increase 2) (olivetti-mode t)) (progn (jump-to-register 1) (olivetti-mode 0) (text-scale-decrease 2)))) :bind ((\u0026#34;\u0026lt;f9\u0026gt;\u0026#34; . distraction-free))) 5 Work #5.1 Emacs Speaks Statistics for R and python(?) #Figure out babel/org-tangle or whatever because Emacs sucks for RMarkdown and org-mode is generally better (see next bit for RMarkdown)\n(use-package ess) ;; :ensure t (require `ess-r-mode) TODO 5.1.1 Polymodes for R #This helps integrate ESS into markdown so editing RMarkdown files is easy. As an added benefit syntax for regular markdown files is supported. I won\u0026rsquo;t have to install polymode itself explicitly since it\u0026rsquo;s a dependency for the poly-R modes and will be pulled automatically. I do vaguely remember some issues this caused, will have to\n(use-package poly-R :config (add-to-list \u0026#39;auto-mode-alist \u0026#39;(\u0026#34;\\\\.md\u0026#34; . poly-markdown-mode)) (add-to-list \u0026#39;auto-mode-alist \u0026#39;(\u0026#34;\\\\.Rmd\u0026#34; . poly-markdown+r-mode)) :hook (poly-markdown-mode . flyspell-mode) (poly-markdown-mode . visual-line-mode) (poly-markdown-mode . auto-fill-mode)) TODO 5.1.2 defining org-skeleton for org-babel + R #Got this from worg documentation but I vaguely remember reading about more options for individual source blocks so will have to change / append accordingly. This defines a skeleton or a format for an org file header that\u0026rsquo;s specific to writing and running R code. It\u0026rsquo;s bound to a keybind so it can be accessed easily on opening a fresh org-babel document.\nThe other resource was: R source blocks in Org Mode\nMore info from the page:\nThe #+INFOJS_OPT option will generate a HTML document that is foldable and follows the style of GNU/INFO document. The :session *R* option makes sure all the R code is run in the same session so objects generated in one code block can be accessed from other code blocks. the :cache yes option is used to avoid re-evaluating unchanged code blocks. This can save significant time when you revise a document with a lot of R code frequently. The :results output graphics :exports both option will put both the R code and its text and graphics output in the generated document. The :tangle yes option allows the document to be \u0026ldquo;tangled\u0026rdquo; to generate pure code file. The short-cut key for tangling is C-c C-v t, which generates a .R file with all the R code extracted. Note the –— string will generate a horizontal line in HTML file. Finally, a hotkey C-S-f4 (while pressing Ctrl and Shift keys, press F4 key) is assigned to invoke this skeleton quickly. (define-skeleton org-skeleton \u0026#34;Header info for a emacs-org file.\u0026#34; \u0026#34;Title: \u0026#34; \u0026#34;#+TITLE:\u0026#34; str \u0026#34; \\n\u0026#34; \u0026#34;#+AUTHOR: Brihaadeesh S \\n\u0026#34; \u0026#34;#+email: brihadeesh.santharam@gmail.com\\n\u0026#34; \u0026#34;#+INFOJS_OPT: \\n\u0026#34; \u0026#34;#+BABEL: :session *R* :cache yes :results output graphics :exports both :tangle yes \\n\u0026#34; \u0026#34;-----\u0026#34; ) (global-set-key [C-S-f4] \u0026#39;org-skeleton) 5.2 org-present for presentations #See dawiwil\u0026rsquo;s section on this from his literate init for more about this.\nTODO 5.3 Citar for reference management? #Citar\nIf I ever get down to writing papers, of course, I\u0026rsquo;d write them in org-mode or LaTeX so this should be useful considering Mendeley desktop is bloat and I haven\u0026rsquo;t a clue if FreeBSD even has Zotero. This has additional setup stuff to do with Embark and the rest of that family. This particular config only works with org-mode. Needs a shit ton of work to properly setup.\nAlso perhaps check out org-ref - it seems a lot simpler. Introduction to org-ref - a video ontroduction\n;;(use-package citar ;;:no-require ;;:custom ;;(org-cite-global-bibliography \u0026#39;(\u0026#34;~/bib/references.bib\u0026#34;)) ;;(org-cite-insert-processor \u0026#39;citar) ;;(org-cite-follow-processor \u0026#39;citar) ;;(org-cite-activate-processor \u0026#39;citar) ;; optional: org-cite-insert is also bound to C-c C-x C-@ ;;:bind ;;(:map org-mode-map :package org (\u0026#34;C-c b\u0026#34; . #\u0026#39;org-cite-insert))) 6 Project management and navigation - projectile #;; project management (use-package projectile ;; :ensure t :demand t :init (setq projectile-completion-system \u0026#39;default) :bind-keymap (\u0026#34;C-c p\u0026#34; . projectile-command-map) ;; :diminish projectile-mode :config (setq projectile-project-search-path \u0026#39;(\u0026#34;~/my_gits/\u0026#34; \u0026#34;~/journal/\u0026#34;)) (projectile-mode +1)) ;; (use-package ibuffer-projectile ;; :after ibuffer ;; :preface ;; (defun my/ibuffer-projectile () ;; (ibuffer-projectile-set-filter-groups) ;; (unless (eq ibuffer-sorting-mode \u0026#39;alphabetic) ;; (ibuffer-do-sort-by-alphabetic))) ;; :hook (ibuffer . my/ibuffer-projectile)) 7 Denote for note-taking #I hope this is considerably simpler than org-roam and easier to setup. I don\u0026rsquo;t particularly like the way org-roam is unnecessarily cluttered and excruciatingly tedious to even get started with.\n7.1 Basic setup #(use-package denote :straight (:source gnu-elpa-mirror) :config ;; Remember to check the doc strings of those variables. (setq denote-directory (expand-file-name \u0026#34;~/documents/denotes/\u0026#34;) ;; keywords denote-known-keywords \u0026#39;(\u0026#34;emacs\u0026#34; \u0026#34;work\u0026#34; \u0026#34;thoughts\u0026#34; \u0026#34;journal\u0026#34;) ;; check denote-infer-keywords t ;; check denote-sort-keywords t ;; Org is the default, set others here denote-file-type nil ;; entry prompt asks for title and keywords denote-prompts \u0026#39;(title keywords) ;; Pick dates, where relevant, with Org\u0026#39;s advanced interface: denote-date-prompt-use-org-read-date t ;; We allow multi-word keywords by default. The author\u0026#39;s ;; personal preference is for single-word keywords for a more ;; rigid workflow. denote-allow-multi-word-keywords t ;; read doc string denote-date-format nil ;; By default, we fontify backlinks in their bespoke buffer. denote-link-fontify-backlinks t) ;; Also see `denote-link-backlinks-display-buffer-action\u0026#39; ;; which is a bit advanced. ;; If you use Markdown or plain text files (Org renders links as buttons ;; right away) (add-hook \u0026#39;find-file-hook #\u0026#39;denote-link-buttonize-buffer) ;; We use different ways to specify a path for demo purposes. (setq denote-dired-directories (list denote-directory (thread-last denote-directory (expand-file-name \u0026#34;attachments\u0026#34;)) (expand-file-name \u0026#34;~/documents/denotes/books\u0026#34;))) ;; Generic (great if you rename files Denote-style in lots of places): ;; (add-hook \u0026#39;dired-mode-hook #\u0026#39;denote-dired-mode) ;; ;; OR if only want it in `denote-dired-directories\u0026#39;: (add-hook \u0026#39;dired-mode-hook #\u0026#39;denote-dired-mode-in-directories) DISABLED 7.2 Keeping my org-agenda updated #I\u0026rsquo;ve switched to using denote for managing my notes and tasks and since I need a reliable system to manage tasks I\u0026rsquo;ve decided to give org-agenda a go. This should make it easier for me to track tasks from TODO tagged headers in my denote notes.\n(defvar peremacs/denote-to-agenda-regexp \u0026#34;_project\u0026#34; \u0026#34;Denote file names that are added to the agenda. See `my-add-denote-to-agenda\u0026#39;.\u0026#34;) (defun peremacs/denote-add-to-agenda () \u0026#34;Add current file to the `org-agenda-files\u0026#39;, if needed. The file\u0026#39;s name must match the `peremacs/denote-to-agenda-regexp\u0026#39;. Add this to the `after-save-hook\u0026#39; or call it interactively.\u0026#34; (interactive) (when-let* ((file (buffer-file-name)) ((denote-file-is-note-p file)) ((string-match-p peremacs/denote-to-agenda-regexp (buffer-file-name)))) (add-to-list \u0026#39;org-agenda-files file))) ;; Example to add the file automatically. Uncomment it: ;; (add-hook \u0026#39;after-save-hook #\u0026#39;my-denote-add-to-agenda) (defun peremacs/denote-remove-from-agenda () \u0026#34;Remove current file from the `org-agenda-files\u0026#39;. See `peremacs/denote-add-to-agenda\u0026#39; for how to add files to the Org agenda.\u0026#34; (interactive) (when-let* ((file (buffer-file-name)) ((string-match-p peremacs/denote-to-agenda-regexp (buffer-file-name)))) (setq org-agenda-files (delete file org-agenda-files)))) TODO 7.3 Denote templates #This should replace capture templates because the interactive denote call seems a lot more flexible and versatile. Still WIP\n(setq denote-templates `((note . \u0026#34;* Some heading\\n\\n* Another heading\u0026#34;) (memo . ,(concat \u0026#34;* Some heading\u0026#34; \u0026#34;\\n\\n\u0026#34; \u0026#34;* Another heading\u0026#34; \u0026#34;\\n\\n\u0026#34;)) (journal-entry . \u0026#34;* Date\\n\\n** Time\u0026#34;))) 7.4 Journaling with Denote # (defun peremacs/denote-journal-entry () \u0026#34;Create an entry tagged \u0026#39;journal\u0026#39; with the date as its title.\u0026#34; (interactive) (denote ;; format like June 14 2022 Tuesday nil \u0026#39;(\u0026#34;journal\u0026#34;) nil \u0026#34;~/my_gits/journal/entries/\u0026#34;) ;; multiple keywords are a list of strings: \u0026#39;(\u0026#34;one\u0026#34; \u0026#34;two\u0026#34;) (insert (concat \u0026#34;* \u0026#34; (format-time-string \u0026#34;(%R)\u0026#34;) \u0026#34; \u0026#34;))) DISABLED 7.5 \u0026ldquo;convenience commands\u0026rdquo; for journal entries # ;; (defun peremacs/denote-journal-entry () ;; \u0026#34;Create journal entry and prompt for a subdirectory. ;; This is equivalent to calling `denote\u0026#39; when `denote-prompts\u0026#39; is ;; set to \u0026#39;(template subdirectory title keywords).\u0026#34; ;; (declare (interactive-only t)) ;; (interactive) ;; (let ((denote-prompts \u0026#39;(subdirectory keywords))) ;; (denote-) ;; (call-interactively #\u0026#39;denote))) (defun peremacs/denote-journal-entry () \u0026#34;Create an entry tagged \u0026#39;journal\u0026#39; with the date as its title.\u0026#34; (interactive) (denote ;; format title like Tuesday 14 June 2022 (format-time-string \u0026#34;%A %e %B %Y\u0026#34;) ;; add \u0026#39;journal\u0026#39; keywords; multiple is a list of strings: \u0026#39;(\u0026#34;one\u0026#34; \u0026#34;two\u0026#34;) \u0026#39;(\u0026#34;journal\u0026#34;) ;; prompt for subdirectory (?) (denote--subdirectory-prompt))) Stolen from somewhere\n(defun journal-day-exists-p ( target ) \u0026#34;check if journal for a day already exists\u0026#34; (file-expand-wildcards (concat \u0026#34;~/my_gits/journal/entries/\u0026#34; target \u0026#34;*.org\u0026#34;))) (defun find-previous-journal () \u0026#34;Find most recent journal\u0026#34; (let* ((today (format-time-string \u0026#34;%Y%m%d\u0026#34;)) (all_journals (sort (directory-files \u0026#34;~/my_gits/journal/entries\u0026#34; nil \u0026#34;^[0-9].*.*org$\u0026#34;) #\u0026#39;string\u0026gt;))) (dolist (journal all_journals) (when (string\u0026lt; (substring journal 0 8) today) (return journal))))) (defun my-denote-journal-today () \u0026#34;Create an entry tagged \u0026#39;journal\u0026#39; with the date as its title.\u0026#34; (interactive) (let* ((today (format-time-string \u0026#34;%Y%m%d\u0026#34;)) (filename (car (journal-day-exists-p today))) (prev (find-previous-journal))) (if filename (find-file filename) (progn (denote (denote--title-prompt) ;; (format-time-string \u0026#34;%d %m %Y %a %H:%M\u0026#34;) \u0026#39;(\u0026#34;journal\u0026#34;) \u0026#34;~/my_gits/journal/entries\u0026#34;) (insert \u0026#34;* \u0026#34;) (save-buffer))))) (defun my-denote-journal-date() (declare (interactive-only t)) (interactive) (let* ((date (org-read-date nil t)) (filename (car (journal-day-exists-p (format-time-string \u0026#34;%Y%m%d\u0026#34; date))))) (if filename (find-file filename) (progn (denote (denote--title-prompt) ;; (format-time-string \u0026#34;%d %m %Y %a %H:%M\u0026#34;) \u0026#39;(\u0026#34;journal\u0026#34;) \u0026#34;~/my_gits/journal/entries\u0026#34;) (insert \u0026#34;* \u0026#34;))))) TODO 7.6 Keybindings #Denote DOES NOT define any key bindings. It requires arguments acceptable to the bind-keys macro. I\u0026rsquo;m not entirely sure some of these are necessary since I\u0026rsquo;m using a capture template.\n;; :bind ;; ((\u0026#34;C-c n n\u0026#34; . denote) ;; (\u0026#34;C-c n N\u0026#34; . denote-type) ;; (\u0026#34;C-c n d\u0026#34; , denote-date) ;; (\u0026#34;C-c n s\u0026#34; . denote-subdirectory) ;; (\u0026#34;C-c n t\u0026#34; . denote-template) ;; ;; renames don\u0026#39;t work with `dired-mode\u0026#39;, hence placed here ;; (\u0026#34;C-c n r\u0026#34; . denote-rename-file) ;; (\u0026#34;C-c n R\u0026#34; . denote-rename-file-using-front-matter) ;; ;; org-mode specifics (group with `global-mode-map\u0026#39; for multiple formats ;; ;; or add for each `markdown\u0026#39;/`text\u0026#39;/`org\u0026#39; if using single format) ;; :map org-mode-map ;; (\u0026#34;C-c n i\u0026#34; . denote-link) ; \u0026#34;insert\u0026#34; mnemonic ;; (\u0026#34;C-c n I\u0026#34; . denote-link-add-links) ;; (\u0026#34;C-c n b\u0026#34; . denote-link-backlinks) ;; (\u0026#34;C-c n f f\u0026#34; . denote-link-find-file) ;; (\u0026#34;C-c n f b\u0026#34; . denote-link-find-backlink) ;; ;; specific to dired ;; :map dired-mode-map ;; (\u0026#34;C-c C-d C-i\u0026#34; . denote-link-dired-marked-notes) ;; (\u0026#34;C-c C-d C-r\u0026#34; . denote-dired-rename-marked-files) ;; (\u0026#34;C-c C-d C-R\u0026#34; . denote-dired-rename-marked-files-using-front-matter) ;; ;; Also check the commands `denote-link-after-creating\u0026#39;, ;; ;; `denote-link-or-create\u0026#39;. You may want to bind them to keys as well. ;; ) ) TODO 7.7 org-journal for journaling requirements #This needs better setting up and integration with either Orgzly or GitJournal for android. iOS seems to have better apps though. Or just make this workable with the termux version of Emacs.\n(use-package org-journal :init ;; Change default prefix key; needs to be set before loading org-journal (setq org-journal-prefix-key \u0026#34;C-c j \u0026#34;) :bind ;; ((\u0026#34;C-c t\u0026#34; . journal-file-today) ;; (\u0026#34;C-c y\u0026#34; . journal-file-yesterday)) :config ;; Journal directory and files (setq org-journal-dir \u0026#34;~/journal/entries/\u0026#34; org-journal-file-format \u0026#34;%Y%m%d.org\u0026#34; org-journal-file-type \u0026#39;daily org-journal-find-file \u0026#39;find-file) ;; Journal file content (setq org-journal-date-format \u0026#34;%e %b %Y (%A)\u0026#34; org-journal-time-format \u0026#34;(%R)\u0026#34; org-journal-file-header \u0026#34;#+title: Daily Journal\\n#+startup: showeverything\u0026#34;) ) 8 Version control #8.1 Git with Magit and gists with gist.el #\n(use-package magit :bind (\u0026#34;C-x g\u0026#34; . magit-status)) gist.el to manage github gists from here\n(use-package gist) 8.2 Undo tree #Helps revert to older versions of files in case I fuck up something somewhere. Hmm. I doubt I ever use it so disabling it now.\n(use-package undo-tree :init (setq undo-tree-history-directory-alist \u0026#39;((\u0026#34;.\u0026#34; . \u0026#34;~/.emacs.d/undo\u0026#34;)) undo-tree-auto-save-history nil) (global-undo-tree-mode) :diminish undo-tree-mode) TODO 8.3 SSH for personal packages and magit #This needs a ton of work\n(use-package keychain-environment :config (keychain-refresh-environment)) ;; ;; import ssh deets from profile ;; (use-package exec-path-from-shell ;; :config ;; (exec-path-from-shell-copy-env \u0026#34;SSH_AGENT_PID\u0026#34;) ;; (exec-path-from-shell-copy-env \u0026#34;SSH_AUTH_SOCK\u0026#34;)) 9 Minibuffer completion #9.1 Access a list of recently edited files #Helps jump back into whatever I was doing before closing Emacs. Or my laptop more like it.\n(use-package recentf :init (setq recentf-max-menu-items 25 recentf-auto-cleanup \u0026#39;never recentf-keep \u0026#39;(file-remote-p file-readable-p)) (recentf-mode 1)) 9.2 Vertico for completions UI #;; Enable vertico (use-package vertico ;; pulls extensions as well? ;; :straight (:host github :repo \u0026#34;minad/vertico\u0026#34;) :init (vertico-mode) :config (setq ;; Grow and shrink the Vertico minibuffer vertico-resize t ;; No prefix with number of entries vertico-count-format nil) (advice-add #\u0026#39;tmm-add-prompt :after #\u0026#39;minibuffer-hide-completions) (Continuing from previous block)\nCompletion-at-point and completion-in-region with Vertico. Use `consult-completion-in-region\u0026rsquo; if Vertico is enabled. Otherwise use the default `completion\u0026ndash;in-region\u0026rsquo; function. Disabled because I use corfu for completion-at-point.\n;; (setq completion-in-region-function ;; (lambda (\u0026amp;rest args) ;; (apply (if vertico-mode ;; #\u0026#39;consult-completion-in-region ;; #\u0026#39;completion--in-region) ;; args))) Prefix the current candidate (See relevant section on the wiki)\n(defun minibuffer-format-candidate (orig cand prefix suffix index _start) (let ((prefix (if (= vertico--index index) \u0026#34;  \u0026#34; \u0026#34; \u0026#34;))) (funcall orig cand prefix suffix index _start))) (advice-add #\u0026#39;vertico--format-candidate :around #\u0026#39;minibuffer-format-candidate) Completions for M-: as well; closes the use-package function started at Vertico header.\n(defun minibuffer-vertico-setup () (setq truncate-lines t) (setq completion-in-region-function (if vertico-mode #\u0026#39;consult-completion-in-region #\u0026#39;completion--in-region))) (add-hook \u0026#39;vertico-mode-hook #\u0026#39;minibuffer-vertico-setup) (add-hook \u0026#39;minibuffer-setup-hook #\u0026#39;minibuffer-vertico-setup) ) TODO 9.2.1 Vertico extensions #Again stolen from Karthik Chikmaglur and needs heavy work, hence not enabled\n(use-package vertico-multiform :load-path \u0026#34;~/.emacs.d/lisp/vertico-extensions/\u0026#34; :commands vertico-multiform-mode :after vertico-flat :bind (:map vertico-map (\u0026#34;M-q\u0026#34; . vertico-multiform-grid) (\u0026#34;C-l\u0026#34; . vertico-multiform-unobtrusive) (\u0026#34;C-M-l\u0026#34; . embark-export)) :init (vertico-multiform-mode 1) :config (setq vertico-multiform-categories \u0026#39;((file my/vertico-grid-mode reverse) (project-file my/vertico-grid-mode reverse) (imenu buffer) (consult-location buffer) (consult-grep buffer) (notmuch-result reverse) (minor-mode reverse) (reftex-label reverse) (bib-reference reverse) (xref-location reverse) (t unobtrusive))) (setq vertico-multiform-commands \u0026#39;((load-theme my/vertico-grid-mode reverse) (my/toggle-theme my/vertico-grid-mode reverse) (consult-dir-maybe reverse) (consult-dir reverse) (consult-history reverse) (consult-completion-in-region reverse) (completion-at-point reverse) (org-roam-node-find reverse) (embark-completing-read-prompter reverse) (embark-act-with-completing-read reverse) (embark-prefix-help-command reverse) (tmm-menubar reverse))) (defun vertico-multiform-unobtrusive () \u0026#34;Toggle the quiet display.\u0026#34; (interactive) (vertico-multiform--display-toggle \u0026#39;vertico-unobtrusive-mode) (if vertico-unobtrusive-mode (vertico-multiform--temporary-mode \u0026#39;vertico-reverse-mode -1) (vertico-multiform--temporary-mode \u0026#39;vertico-reverse-mode 1)))) (use-package vertico-unobtrusive :load-path \u0026#34;~/.local/share/git/vertico/extensions/\u0026#34; :after vertico-flat) #+name vertico-grid\n(use-package vertico-grid :load-path \u0026#34;~/.emacs.d/lisp/vertico-extensions/\u0026#34; :after vertico ;; :bind (:map vertico-map (\u0026#34;M-q\u0026#34; . vertico-grid-mode)) :config (defvar my/vertico-count-orig vertico-count) (define-minor-mode my/vertico-grid-mode \u0026#34;Vertico-grid display with modified row count.\u0026#34; :global t :group \u0026#39;vertico (cond (my/vertico-grid-mode (setq my/vertico-count-orig vertico-count) (setq vertico-count 4) (vertico-grid-mode 1)) (t (vertico-grid-mode 0) (setq vertico-count my/vertico-count-orig)))) (setq vertico-grid-separator \u0026#34; \u0026#34;) (setq vertico-grid-lookahead 50)) (use-package vertico-quick :load-path \u0026#34;~/.emacs.d/lisp/vertico-extensions/\u0026#34; :after vertico :bind (:map vertico-map (\u0026#34;M-i\u0026#34; . vertico-quick-insert) (\u0026#34;C-\u0026#39;\u0026#34; . vertico-quick-exit) (\u0026#34;C-o\u0026#34; . vertico-quick-embark)) :config (defun vertico-quick-embark (\u0026amp;optional arg) \u0026#34;Embark on candidate using quick keys.\u0026#34; (interactive) (when (vertico-quick-jump) (embark-act arg)))) (use-package vertico-directory :load-path \u0026#34;~/.emacs.d/lisp/vertico-extensions/\u0026#34; :hook (rfn-eshadow-update-overlay vertico-directory-tidy) :after vertico :bind (:map vertico-map (\u0026#34;DEL\u0026#34; . vertico-directory-delete-char) (\u0026#34;M-DEL\u0026#34; . vertico-directory-delete-word) (\u0026#34;C-w\u0026#34; . vertico-directory-delete-word) (\u0026#34;RET\u0026#34; . vertico-directory-enter))) (use-package vertico-repeat :load-path \u0026#34;~/.emacs.d/lisp/vertico-extensions/\u0026#34; :after vertico :bind ((\u0026#34;C-x .\u0026#34; . vertico-repeat))) (use-package vertico-reverse ;; :disabled :load-path \u0026#34;~/.emacs.d/lisp/vertico-extensions/\u0026#34; :after vertico) (use-package vertico-flat :load-path \u0026#34;~/.emacs.d/lisp/vertico-extensions/\u0026#34; ;; :bind (:map vertico-map ;; (\u0026#34;M-q\u0026#34; . vertico-flat-mode)) :after vertico) (use-package vertico-buffer :load-path \u0026#34;~/.emacs.d/lisp/vertico-extensions/\u0026#34; :after vertico ;; :hook (vertico-buffer-mode . vertico-buffer-setup) :config (setq vertico-buffer-display-action \u0026#39;display-buffer-reuse-window)) 9.3 Orderless completion #Search for commands, buffers, etc with vertico without having to match the order of words in the command. Adding spaces between keywords can match commands with those words anywhere in them. This config was bootlegged from minad\u0026rsquo;s config at the consult wiki.\n(use-package orderless :config (defvar +orderless-dispatch-alist \u0026#39;((?% . char-fold-to-regexp) (?! . orderless-without-literal) (?`. orderless-initialism) (?= . orderless-literal) (?~ . orderless-flex))) ;; Recognizes the following patterns: ;; * ~flex flex~ ;; * =literal literal= ;; * %char-fold char-fold% ;; * `initialism initialism` ;; * !without-literal without-literal! ;; * .ext (file extension) ;; * regexp$ (regexp matching at end) (defun +orderless-dispatch (pattern index _total) (cond ;; Ensure that $ works with Consult commands, which add disambiguation suffixes ((string-suffix-p \u0026#34;$\u0026#34; pattern) `(orderless-regexp . ,(concat (substring pattern 0 -1) \u0026#34;[\\x100000-\\x10FFFD]*$\u0026#34;))) ;; File extensions ((and ;; Completing filename or eshell (or minibuffer-completing-file-name (derived-mode-p \u0026#39;eshell-mode)) ;; File extension (string-match-p \u0026#34;\\\\`\\\\..\u0026#34; pattern)) `(orderless-regexp . ,(concat \u0026#34;\\\\.\u0026#34; (substring pattern 1) \u0026#34;[\\x100000-\\x10FFFD]*$\u0026#34;))) ;; Ignore single ! ((string= \u0026#34;!\u0026#34; pattern) `(orderless-literal . \u0026#34;\u0026#34;)) ;; Prefix and suffix ((if-let (x (assq (aref pattern 0) +orderless-dispatch-alist)) (cons (cdr x) (substring pattern 1)) (when-let (x (assq (aref pattern (1- (length pattern))) +orderless-dispatch-alist)) (cons (cdr x) (substring pattern 0 -1))))))) ;; Define orderless style with initialism by default (orderless-define-completion-style +orderless-with-initialism (orderless-matching-styles \u0026#39;(orderless-initialism orderless-literal orderless-regexp))) ;; You may want to combine the `orderless` style with `substring` and/or `basic`. ;; There are many details to consider, but the following configurations all work well. ;; Personally I (@minad) use option 3 currently. Also note that you may want to configure ;; special styles for special completion categories, e.g., partial-completion for files. ;; ;; 1. (setq completion-styles \u0026#39;(orderless)) ;; This configuration results in a very coherent completion experience, ;; since orderless is used always and exclusively. But it may not work ;; in all scenarios. Prefix expansion with TAB is not possible. ;; ;; 2. (setq completion-styles \u0026#39;(substring orderless)) ;; By trying substring before orderless, TAB expansion is possible. ;; The downside is that you can observe the switch from substring to orderless ;; during completion, less coherent. ;; ;; 3. (setq completion-styles \u0026#39;(orderless basic)) ;; Certain dynamic completion tables (completion-table-dynamic) ;; do not work properly with orderless. One can add basic as a fallback. ;; Basic will only be used when orderless fails, which happens only for ;; these special tables. ;; ;; 4. (setq completion-styles \u0026#39;(substring orderless basic)) ;; Combine substring, orderless and basic. ;; (setq completion-styles \u0026#39;(orderless) completion-category-defaults nil ;;; Enable partial-completion for files. ;;; Either give orderless precedence or partial-completion. ;;; Note that completion-category-overrides is not really an override, ;;; but rather prepended to the default completion-styles. ;; completion-category-overrides \u0026#39;((file (styles orderless partial-completion))) ;; orderless is tried first completion-category-overrides \u0026#39;((file (styles partial-completion)) ;; partial-completion is tried first ;; enable initialism by default for symbols (command (styles +orderless-with-initialism)) (variable (styles +orderless-with-initialism)) (symbol (styles +orderless-with-initialism))) orderless-component-separator #\u0026#39;orderless-escapable-split-on-space ;; allow escaping space with backslash! orderless-style-dispatchers \u0026#39;(+orderless-dispatch))) 9.4 Persistent command history #Persist history over Emacs restarts. Vertico sorts by history position.\n(use-package savehist :init (savehist-mode)) 9.5 A few more useful configurations #;; (use-package emacs ;; :init ;; Add prompt indicator to `completing-read-multiple\u0026#39;. ;; Alternatively try `consult-completing-read-multiple\u0026#39;. (defun crm-indicator (args) (cons (concat \u0026#34;[CRM] \u0026#34; (car args)) (cdr args))) (advice-add #\u0026#39;completing-read-multiple :filter-args #\u0026#39;crm-indicator) ;; Do not allow the cursor in the minibuffer prompt (setq minibuffer-prompt-properties \u0026#39;(read-only t cursor-intangible t face minibuffer-prompt)) (add-hook \u0026#39;minibuffer-setup-hook #\u0026#39;cursor-intangible-mode) ;; Emacs 28: Hide commands in M-x which do not work in the current mode. ;; Vertico commands are hidden in normal buffers. ;; (setq read-extended-command-predicate ;; #\u0026#39;command-completion-default-include-p) ;; Enable recursive minibuffers (setq enable-recursive-minibuffers t) ;; ) 9.6 Richer annotations in minubuffer #(use-package marginalia :after vertico ;; The :init configuration is always executed (Not lazy!) :init ;; Must be in the :init section of use-package such that the mode gets ;; enabled right away. Note that this forces loading the package. (marginalia-mode) ;; When using Selectrum, ensure that Selectrum is refreshed when cycling annotations. ;; (advice-add #\u0026#39;marginalia-cycle :after ;; (lambda () (when (bound-and-true-p selectrum-mode) (selectrum-exhibit \u0026#39;keep-selected)))) ;; Prefer richer, more heavy, annotations over the lighter default variant. ;; E.g. M-x will show the documentation string additional to the keybinding. ;; By default only the keybinding is shown as annotation. ;; Note that there is the command `marginalia-cycle\u0026#39; to ;; switch between the annotators. ;; (setq marginalia-annotators \u0026#39;(marginalia-annotators-heavy marginalia-annotators-light nil)) ) 9.7 Consult adds more minibuffer functionality #(use-package consult ;; Replace bindings. Lazily loaded due by `use-package\u0026#39;. :bind ((\u0026#34;C-x B\u0026#34; . consult-buffer) (\u0026#34;C-x 4 b\u0026#34; . consult-buffer-other-window) (\u0026#34;C-x 5 b\u0026#34; . consult-buffer-other-frame) (\u0026#34;M-g i\u0026#34; . consult-imenu) (\u0026#34;M-g I\u0026#34; . consult-project-imenu) ;; searching for files (\u0026#34;M-s f\u0026#34; . consult-find) (\u0026#34;M-s F\u0026#34; . consult-git-grep) (\u0026#34;M-s g\u0026#34; . consult-grep) (\u0026#34;M-s r\u0026#34; . consult-ripgrep) (\u0026#34;C-c f r\u0026#34; . consult-recent-file) (\u0026#34;C-x C-\u0026#34; . consult-recent-file) ;; Isearch integration (\u0026#34;C-s\u0026#34; . consult-isearch-history) (\u0026#34;C-c L\u0026#34; . consult-outline) (\u0026#34;C-c h l\u0026#34; . consult-org-heading) ;; yank from kill-ring (\u0026#34;M-y\u0026#34; . consult-yank-pop) ) ;; Enable automatic preview at point in the *Completions* buffer. This is ;; relevant when you use the default completion UI. You may want to also ;; enable `consult-preview-at-point-mode` in Embark Collect buffers. :hook (completion-list-mode . consult-preview-at-point-mode) :config ;; Configure the narrowing key. (setq consult-narrow-key \u0026#34;\u0026lt;\u0026#34;) ;; (kbd \u0026#34;C-+\u0026#34;) ;; Configure a function which returns the project ;; root directory - projectile.el (projectile-project-root) (autoload \u0026#39;projectile-project-root \u0026#34;projectile\u0026#34;) (setq consult-project-root-function #\u0026#39;projectile-project-root) ;; use consult with perspective.el (consult-customize consult--source-buffer :hidden t :default nil) (defvar consult--source-perspective (list :name \u0026#34;Perspective\u0026#34; :narrow ?s :category \u0026#39;buffer :state #\u0026#39;consult--buffer-state :default t :items #\u0026#39;persp-get-buffer-names)) (push consult--source-perspective consult-buffer-sources) ) ;; Optionally add the `consult-flycheck\u0026#39; command. (use-package consult-flycheck :bind (:map flycheck-command-map (\u0026#34;!\u0026#34; . consult-flycheck))) TODO 9.8 Consult interface for denote #I haven\u0026rsquo;t really figured out how to programmatically add additional functionality/features for consult, nor have I figured out denote. I got this from one random blog post about denote while looking for how people use denote to work with sub-directories. I\u0026rsquo;ve just grabbed the files from their package for now but I might need to extend this if I end up switching to using denote for journaling.\n(use-package consult-denote :straight (consult-denote :type git :host codeberg :repo \u0026#34;whhone/consult-denote\u0026#34;)) TODO 9.9 Embark - actions; reorganise #This I\u0026rsquo;ve not used yet but makes a lot of stuff easier like searchingfor the definition or the help/info page a highlighted word from within the buffer or the minibuffer or even the minibuffer completion list.\nGroup with the rest of the packages from this family?\n(use-package embark :bind ((\u0026#34;C-S-a\u0026#34; . embark-act) ;; pick some comfortable binding (\u0026#34;C-h B\u0026#34; . embark-bindings)) ;; alternative for `describe-bindings\u0026#39; :init ;; Optionally replace the key help with a completing-read interface (setq prefix-help-command #\u0026#39;embark-prefix-help-command) :config ;; Hide the mode line of the Embark live/completions buffers (add-to-list \u0026#39;display-buffer-alist \u0026#39;(\u0026#34;\\\\`\\\\*Embark Collect \\\\(Live\\\\|Completions\\\\)\\\\*\u0026#34; nil (window-parameters (mode-line-format . none))))) ;; Consult users will also want the embark-consult package. (use-package embark-consult :ensure t :after (embark consult) :demand t ; only necessary if you have the hook below ;; if you want to have consult previews as you move around an ;; auto-updating embark collect buffer :hook (embark-collect-mode . consult-preview-at-point-mode)) 10 Corfu for completion in buffer #This might need some more work - integration with minad\u0026rsquo;s cape for various kinds of completions although he alleges this works well with base Emacs.\n(use-package corfu :bind (:map corfu-map ;; ??? :states \u0026#39;insert (\u0026#34;TAB\u0026#34; . corfu-next) ([tab] . corfu-next) (\u0026#34;S-TAB\u0026#34; . corfu-previous) ([backtab] . corfu-previous) (\u0026#34;\u0026lt;escape\u0026gt;\u0026#34; . corfu-quit) (\u0026#34;\u0026lt;return\u0026gt;\u0026#34; . corfu-insert) (\u0026#34;M-d\u0026#34; . corfu-show-documentation) (\u0026#34;M-l\u0026#34; . \u0026#39;corfu-show-location) (\u0026#34;SPC\u0026#34; . corfu-insert-separator)) :custom ;; Only use `corfu\u0026#39; when calling `completion-at-point\u0026#39; or ;; (corfu-auto t) ;; `indent-for-tab-command\u0026#39; ;; (corfu-auto-prefix 3) ;; (corfu-auto-delay 0.2) ;; size (corfu-min-width 80) ;; Always have the same width (corfu-max-width corfu-min-width) (corfu-count 14) (corfu-scroll-margin 4) (corfu-cycle t) ;; Show documentation in echo area? (corfu-echo-documentation t) ;; Preselect first candidate? (corfu-preselect-first nil) ;; Preview current candidate? (corfu-preview-current \u0026#39;insert) ;; quit if no match (corfu-quit-no-match t) :init (global-corfu-mode)) 10.1 CAPE - extensions for corfu #Corfu needs cape to provide completion backends because it\u0026rsquo;s extremely stripped down. Will have to check what other backends I\u0026rsquo;ll need to enable.\n(use-package cape :config (setq cape-dabbrev-min-length 2) :init ;; Add `completion-at-point-functions\u0026#39;, used by `completion-at-point\u0026#39;. (dolist (backend \u0026#39;( cape-file cape-dabbrev cape-keyword cape-abbrev cape-ispell cape-dict cape-symbol cape-line )) (add-to-list \u0026#39;completion-at-point-functions backend))) (add-to-list \u0026#39;completion-at-point-functions #\u0026#39;cape-file) (add-to-list \u0026#39;completion-at-point-functions #\u0026#39;cape-keyword) (add-to-list \u0026#39;completion-at-point-functions #\u0026#39;cape-ispell) (add-to-list \u0026#39;completion-at-point-functions #\u0026#39;cape-dict) (add-to-list \u0026#39;completion-at-point-functions #\u0026#39;cape-symbol) 11 Look #11.1 Font configuration #11.1.1 Setting a font # ;; first set default (set-face-attribute \u0026#39;default nil :family \u0026#34;Hack\u0026#34; :height 70) ;; then set variable-pitch fonts (set-face-attribute \u0026#39;variable-pitch nil :family \u0026#34;Iosevka Aile\u0026#34; :height 1.1) ;; finally set fixed-pitch (set-face-attribute \u0026#39;fixed-pitch nil :family \u0026#34;Hack\u0026#34; :height 1.0) 11.1.2 Line spacing #Usually 0, less if possible but Emacs doesn\u0026rsquo;t allow for that.\n;; Line spacing, can be 0 for code and 1 or 2 for text (setq-default line-spacing 0.1) 11.2 Editor theme #Update: \u0026lt;2022-11-21 Mon\u0026gt; Moved this up so it doesn\u0026rsquo;t throw the cryptic error with Modus themes: Debugger entered--Lisp error: (wrong-number-of-arguments (1 . 2) 8) This is based on Adam Spiers\u0026rsquo;s comment - the theme should be loaded before custom.el is pulled in to avoid issues with version mismatch like the shit with the org package.\n11.2.1 ef-themes # (use-package ef-themes :config ;; If you like two specific themes and want to switch between them, you ;; can specify them in `ef-themes-to-toggle\u0026#39; and then invoke the command ;; `ef-themes-toggle\u0026#39;. All the themes are included in the variable ;; `ef-themes-collection\u0026#39;. (setq ef-themes-to-toggle \u0026#39;(ef-night ef-duo-dark ef-winter)) (setq ef-themes-headings ; read the manual\u0026#39;s entry or the doc string \u0026#39;((0 . (variable-pitch light 1.2)) (1 . (variable-pitch light 1.1)) (2 . (variable-pitch regular)) (3 . (variable-pitch regular)) (4 . (variable-pitch regular)) (5 . (variable-pitch)) ; absence of weight means `bold\u0026#39; (6 . (variable-pitch)) (7 . (variable-pitch)) (t . (variable-pitch)))) ;; They are nil by default... (setq ef-themes-mixed-fonts t ef-themes-variable-pitch-ui t) ;; Read the doc string or manual for this one. The symbols can be ;; combined in any order. (setq ef-themes-region \u0026#39;(intense no-extend neutral)) ;; Disable all other themes to avoid awkward blending: (mapc #\u0026#39;disable-theme custom-enabled-themes) ;; Load the theme of choice: ;; (load-theme \u0026#39;ef-summer :no-confirm) ;; OR use this to load the theme which also calls `ef-themes-post-load-hook\u0026#39;: ;; (ef-themes-select \u0026#39;ef-winter) ;; The themes we provide are recorded in the `ef-themes-dark-themes\u0026#39;, ;; `ef-themes-light-themes\u0026#39;. ;; We also provide these commands, but do not assign them to any key: ;; ;; - `ef-themes-toggle\u0026#39; ;; - `ef-themes-select\u0026#39; ;; - `ef-themes-load-random\u0026#39; ;; - `ef-themes-preview-colors\u0026#39; ;; - `ef-themes-preview-colors-current\u0026#39; ) 11.2.2 Modus from Protesilaos! #This might need additional setting since modus themes are now included within Emacs\n(use-package modus-themes :straight (:source gnu-elpa-mirror) :init (setq modus-themes-mixed-fonts t modus-themes-bold-constructs t modus-themes-italic-constructs t modus-themes-region \u0026#39;(no-extend) modus-themes-mode-line \u0026#39;(accented) modus-themes-prompts \u0026#39;(backgound bold intense) ;; modus-themes-hl-line \u0026#39;accented modus-themes-intense-markup t modus-themes-region \u0026#39;(no-extend bg-only) modus-themes-subtle-line-numbers t modus-themes-fringes \u0026#39;(subtle) modus-themes-language-checkers \u0026#39;(straight-underline faint) modus-themes-org-blocks \u0026#39;(gray-background) modus-themes-completions \u0026#39;((matches . (bold background intense)) (selection . (bold background intense)) (popup . (accented)))) (defun peremacs/call-modus-operandi () (interactive) ;; heading backgrounds work better here (disable-theme \u0026#39;modus-vivendi) (setq modus-themes-headings \u0026#39;((1 . (overline background variable-pitch bold 1.1)) (2 . (overline background variable-pitch bold)) (3 . (overline background variable-pitch semibold)) (4 . (overline background variable-pitch semibold)) (t . (overline variable-pitch semibold)))) (modus-themes-load-operandi)) (defun peremacs/call-modus-vivendi () (interactive) (disable-theme \u0026#39;modus-operandi) (setq modus-themes-headings \u0026#39;((1 . (overline monochrome variable-pitch bold 1.1)) (2 . (overline monochrome variable-pitch bold)) (3 . (overline monochrome variable-pitch semibold)) (4 . (overline monochrome variable-pitch semibold)) (t . (overline variable-pitch semibold)))) (modus-themes-load-vivendi)) ;; set semibold as the bold face ;; (for those fonts that provide this face) ;; (set-face-attribute \u0026#39;bold nil :weight \u0026#39;semibold) ;; :config ;; Load the theme files before enabling a theme (modus-themes-load-themes) ;; Load the theme of your choice: ;; (peremacs/call-modus-operandi) (peremacs/call-modus-vivendi) ) 11.2.3 Commentary #An elegant theme highlighting comments only\n(use-package commentary-theme ;;:config ;;(load-theme \u0026#39;commentary t) ) 11.2.4 My themes #Neither of these work using straight.el or use-package, together or separately (afaik). If these work, I could maybe add some more of my own.\nForked from the colorless-themes macro. This includes my version of the macro, original themes from Thomas Letan, and some additional themes of my own that use this macro.\n(use-package colourless-themes :straight (:host gitlab :repo \u0026#34;peregrinator/colourless-themes-el\u0026#34;) ;;:config ;;(load-theme \u0026#39;beelzebub t) ) DISABLED 11.2.5 unused #DISABLED 11.2.5.1 Wilmersdorf #I saw this on doom-themes but I don\u0026rsquo;t want to pull all of those just for this, so installing from it\u0026rsquo;s GitHub using straight.el. But it fails to load with use-package so I\u0026rsquo;m going to have to do it manually.\n(use-package wilmersdorf :straight (:host github :repo \u0026#34;ianyepan/wilmersdorf-emacs-theme\u0026#34;) ;; :config ;; (load-theme \u0026#39;wilmersdorf t) ) DISABLED 11.2.5.2 Tao #Monochrome theme with minimal bold highlights and boxes?\n(use-package tao-theme :config ;; load theme (load-theme \u0026#39;tao-yang t) ;; (load-theme \u0026#39;tao-yin t) ) DISABLED 11.2.5.3 Expresso #(use-package espresso-theme :straight (:host github :repo \u0026#34;dgutov/espresso-theme\u0026#34;) ;;:config (load-theme \u0026#39;espresso t) ) DISABLED 11.2.5.4 Github dark #(use-package github-dark-vscode-theme :config (load-theme \u0026#39;github-dark-vscode t) ;; fixed upstream ;; unrelated but the cursor colour really needs improvement ;; (set-cursor-color \u0026#34;#ffffff\u0026#34;) ) DISABLED 11.2.5.5 Github modern (light) #(use-package github-modern-theme :config (load-theme \u0026#39;github-modern t) ) DISABLED 11.2.5.6 Vale #(use-package vale :straight (:type git :repo \u0026#34;https://codeberg.org/ext0l/vale.el\u0026#34;) :config ;; (load-theme \u0026#39;vale t) ) DISABLED 11.2.5.7 Parchment #Based on the screenshot of Haskell code on the Pragmata Pro website.\n(use-package Parchment-theme :straight (:host github :repo \u0026#34;brihadeesh/emacs-parchment-theme\u0026#34;) :config ;; (load-theme \u0026#39;Parchment t) ) DISABLED 11.2.5.8 Almost mono #(use-package almost-mono-themes :config ;; (load-theme \u0026#39;almost-mono-black t) ;; (load-theme \u0026#39;almost-mono-gray t) ;; (load-theme \u0026#39;almost-mono-cream t) ;; (load-theme \u0026#39;almost-mono-white t) ) DISABLED 11.2.5.9 Stimmung themes for nearly monochrome appearance #(use-package stimmung-themes ;; :straight (stimmung-themes :host github :repo \u0026#34;motform/stimmung-themes\u0026#34;) ; if you are a straight shooter :config ;; (stimmung-themes-load-dark) ) 11.3 Highlighted line-mode #\n;; cursorline (global-hl-line-mode 1) 11.4 Solid window dividers #;; (setq window-divider-default-right-width 1) ;; (setq window-divider-default-bottom-width 1) ;; (setq window-divider-default-places \u0026#39;all) ;; (window-divider-mode) (setq window-divider-default-right-width 1) (setq window-divider-default-bottom-width 1) (setq window-divider-default-places \u0026#39;right-only) (add-hook \u0026#39;after-init-hook #\u0026#39;window-divider-mode) 11.5 Something about underlines #Underline line at descent position, not baseline position\n(setq x-underline-at-descent-line t) 11.6 Cursor configuration #(set-default \u0026#39;cursor-type \u0026#39;(bar . 2)) (blink-cursor-mode 1) 11.7 Line-number format #(setq linum-format \u0026#34;%4d \u0026#34;) 11.8 Visual not audible bell #Flashes modeline for warnings from purcell\n;; No sound (setq ring-bell-function \u0026#39;ignore) (use-package mode-line-bell :config (mode-line-bell-mode)) 11.9 No Tooltips #(tooltip-mode 0) 11.10 Minibuffer appearance? #As per Hamilton9508\u0026rsquo;s comment he makes a single minibuffer-only frame across the bottom of the Emacs window and so the rest of the frames have only a single buffer (i.e. the buffer being edited/used) and no minubuffer of it\u0026rsquo;s own. Not sure if this will work for me but I\u0026rsquo;ll perhaps give it a shot.\n(setq minibuffer-frame-alist \u0026#39;( (name . \u0026#34;minibuf\u0026#34;) (menu-bar-lines . 0) (vertical-scroll-bars . nil) (auto-raise . t) (sticky . t) (left . 0) (top . -1) (height . 1) (internal-border-width . 0) (minibuffer . only))) 11.11 Minimalist and ordered mode-line #People seem to use packages for this. I\u0026rsquo;ve considered using the doom-modeline but it seems to be pretty heavy in terms of dependencies and I\u0026rsquo;d like a mode-line with a much more fundamental interface although it\u0026rsquo;s still a good contender considering it\u0026rsquo;s very simple to configure. I\u0026rsquo;m also considering simple-mode-line.\n11.11.1 Mood-line because I\u0026rsquo;m fucking tired #(use-package mood-line :config (mood-line-mode) ) 11.12 Pulse to locate cursor with Protesilaos\u0026rsquo;s pulsar # (use-package pulsar :straight (:host gitlab :repo \u0026#34;protesilaos/pulsar\u0026#34;) :custom (pulsar-pulse-functions ; Read the doc string for why not `setq\u0026#39; \u0026#39;(recenter-top-bottom move-to-window-line-top-bottom reposition-window ;; bookmark-jump ;; other-window ;; delete-window ;; delete-other-windows forward-page backward-page scroll-up-command scroll-down-command ;; windmove-right ;; windmove-left ;; windmove-up ;; windmove-down ;; windmove-swap-states-right ;; windmove-swap-states-left ;; windmove-swap-states-up ;; windmove-swap-states-down ;; tab-new ;; tab-close ;; tab-next org-next-visible-heading org-previous-visible-heading org-forward-heading-same-level org-backward-heading-same-level outline-backward-same-level outline-forward-same-level outline-next-visible-heading outline-previous-visible-heading outline-up-heading)) :config (setq pulsar-pulse-on-window-change t pulsar-pulse t pulsar-delay 0.055 pulsar-iterations 10 pulsar-face \u0026#39;pulsar-cyan) (pulsar-global-mode 1) :bind ((\u0026#34;C-c l\u0026#34; . pulsar-pulse-line) (\u0026#34;C-c h l\u0026#34; . pulsar-highlight-line)) :hook (consult-after-jump . pulsar-recenter-top) (consult-after-jump . pulsar-reveal-entry)) 11.13 Display complex key-binding suggestions #(use-package which-key :diminish which-key-mode :config (which-key-mode)) 11.14 Diminish for a cleaner modeline #org-indent-mode doesn\u0026rsquo;t get disabled by the default method.\n(use-package diminish :diminish auto-fill-function :diminish flyspell-mode :diminish visual-line-mode ) (defun peremacs/diminish-org-indent () (interactive) (diminish \u0026#39;org-indent-mode \u0026#34;\u0026#34;)) (add-hook \u0026#39;org-indent-mode-hook \u0026#39;peremacs/diminish-org-indent) 11.15 Pixel scroll precision mode (Emacs 29+) #(pixel-scroll-precision-mode +1) 11.16 Make \u0026ldquo;Emacs\u0026rdquo; the window title #\n(setq-default frame-title-format \u0026#39;(\u0026#34;Emacs\u0026#34;)) 11.17 Make scratch buffer and minibuffer blank #\n(setq initial-scratch-message \u0026#34;\u0026#34;) (setq inhibit-startup-echo-area-message t) (setq inhibit-startup-message t) (setq initial-scratch-message nil) 11.18 Show keystrokes #Stolen from Karthik Chikmaglur\u0026rsquo;s emacs.d; shows what is typed immediately.\n(setq echo-keystrokes 0.01) 12 Window Management #12.1 EXWM #This ofc doesn\u0026rsquo;t work on wayland and pgtk emacs but am I willing to learn C++ and emacs-lisp well enough to contribute to porting this to wayland/wlroots or something?\n(use-package exwm ;; :ensure t :diminish :custom (exwm-workspace-number 4) ;; (defun exwm-start-process (command) ;; \u0026#34;Start a process via a shell COMMAND.\u0026#34; ;; (interactive (list (read-shell-command \u0026#34;$ \u0026#34;))) ;; (start-process-shell-command command nil command)) ;; ((kbd \u0026#34;\u0026lt;s-return\u0026gt;\u0026#34;) #\u0026#39;exwm-start-process) ;; (exwm-input-set-key (kbd \u0026#34;\u0026lt;s-return\u0026gt;\u0026#34;) #\u0026#39;exwm-start-process) :config ;; This now has to be toggled separately in the `~/.xinitrc\u0026#39; ;; see https://www.reddit.com/r/emacs/comments/mjx2qd/conditional_loading_for_exwm_with_usepackage/gte7puu/ (require \u0026#39;exwm-config) ;; (exwm-config-default) ;; Effective use of EXWM requires the ability to return from char-mode to line-mode. ;; This will be performed with s-r. (exwm-input-set-key (kbd \u0026#34;s-r\u0026#34;) #\u0026#39;exwm-reset) ;; Hide all windows except the current one. (exwm-input-set-key (kbd \u0026#34;s-o\u0026#34;) #\u0026#39;delete-other-windows) ;; Close the current window and kill its buffer. (exwm-input-set-key (kbd \u0026#34;C-s-x\u0026#34;) #\u0026#39;kill-buffer-and-window) ;; Close the current window without killing its buffer. (exwm-input-set-key (kbd \u0026#34;s-x\u0026#34;) #\u0026#39;delete-window) ;; Open an Eshell buffer in the current buffer’s location. (exwm-input-set-key (kbd \u0026#34;C-z\u0026#34;) #\u0026#39;eshell-find-eshell-here) ;; Move point to the windows immediately around the current window. (exwm-input-set-key (kbd \u0026#34;s-h\u0026#34;) #\u0026#39;windmove-left) (exwm-input-set-key (kbd \u0026#34;s-j\u0026#34;) #\u0026#39;windmove-down) (exwm-input-set-key (kbd \u0026#34;s-k\u0026#34;) #\u0026#39;windmove-up) (exwm-input-set-key (kbd \u0026#34;s-l\u0026#34;) #\u0026#39;windmove-right) (exwm-input-set-key (kbd \u0026#34;s-w\u0026#34;) #\u0026#39;exwm-workspace-switch)) 12.2 Workspaces with perspective-el #Independent workspaces for different projects like profiles on RStudio but perhaps a lot more dynamic. This might need more work hence adding a link to the project page here.\n(use-package perspective :demand t :init ;; apparently it\u0026#39;s essential to define a prefix on Emacs=28 (setq persp-mode-prefix-key (kbd \u0026#34;C-x x\u0026#34;)) :bind ;; these work with selectrum/vertico i.e. `completing-read\u0026#39; ;; type completion systems that are appararently closer to ;; base Emacs functioning. ((\u0026#34;C-x b\u0026#34; . persp-switch-to-buffer*) ;;(\u0026#34;C-x k\u0026#34; . persp-kill-buffer*) ) :config ;; Running `persp-mode\u0026#39; multiple times resets the perspective list... (unless (equal (default-value \u0026#39;persp-mode) t) (persp-mode 1))) 12.2.1 persp-projectile for proper workspace window management #(use-package persp-projectile :bind (\u0026#34;C-x x s\u0026#34;. persp-projectile-switch-project)) 12.3 Undo disrupted window/frame arrangement after using some shit #Stolen from Karthik Chikmaglur\u0026rsquo;s emacs.d\n(use-package winner :disabled :commands winner-undo :bind ((\u0026#34;C-x C-/\u0026#34; . winner-undo) (\u0026#34;s-/\u0026#34; . winner-undo) (\u0026#34;s-S-/\u0026#34; . winner-redo)) :config (winner-mode +1)) 12.4 Ace-window helps with navigation between multiple windows #Simpler navigation between open Emacs windows\n(use-package ace-window :init (setq aw-keys \u0026#39;(?a ?s ?d ?f ?j ?k ?l ?o)) :bind ((\u0026#34;C-x o\u0026#34; . ace-window) (\u0026#34;M-o\u0026#34; . other-window) (\u0026#34;M-o\u0026#34; . ace-window)) :diminish ace-window-mode) TODO 12.4.0.1 Other actions that ace-window handles: #(defvar aw-dispatch-alist \u0026#39;((?x aw-delete-window \u0026#34;Delete Window\u0026#34;) (?m aw-swap-window \u0026#34;Swap Windows\u0026#34;) (?M aw-move-window \u0026#34;Move Window\u0026#34;) (?c aw-copy-window \u0026#34;Copy Window\u0026#34;) (?j aw-switch-buffer-in-window \u0026#34;Select Buffer\u0026#34;) (?n aw-flip-window) (?u aw-switch-buffer-other-window \u0026#34;Switch Buffer Other Window\u0026#34;) (?c aw-split-window-fair \u0026#34;Split Fair Window\u0026#34;) (?v aw-split-window-vert \u0026#34;Split Vert Window\u0026#34;) (?b aw-split-window-horz \u0026#34;Split Horz Window\u0026#34;) (?o delete-other-windows \u0026#34;Delete Other Windows\u0026#34;) (?? aw-show-dispatch-help)) \u0026#34;List of actions for `aw-dispatch-default\u0026#39;.\u0026#34;) TODO 12.5 Sane native window management #Focuses new windows when created.\n;; Window management ;; focus new windows once created (use-package window :straight (:type \u0026#39;built-in) :bind ((\u0026#34;C-x 3\u0026#34; . hsplit-last-buffer) (\u0026#34;C-x 2\u0026#34; . vsplit-last-buffer)) :preface (defun hsplit-last-buffer () \u0026#34;Gives the focus to the last created horizontal window.\u0026#34; (interactive) (split-window-horizontally) (other-window 1)) (defun vsplit-last-buffer () \u0026#34;Gives the focus to the last created vertical window.\u0026#34; (interactive) (split-window-vertically) (other-window 1))) 12.6 Better popups with popper #(use-package popper :bind ((\u0026#34;C-`\u0026#34; . popper-toggle-latest) (\u0026#34;M-`\u0026#34; . popper-cycle) (\u0026#34;C-M-`\u0026#34; . popper-toggle-type)) :init ;; assign windows to popper (to appear as popups) (setq popper-reference-buffers \u0026#39;(\u0026#34;\\\\*Messages\\\\*\u0026#34; \u0026#34;Output\\\\*$\u0026#34; \u0026#34;\\\\*Backtrace\\\\*\u0026#34; \u0026#34;\\\\*Warnings\\\\*\u0026#34; \u0026#34;^Calc:\u0026#34; \u0026#34;^\\\\*ielm\\\\*\u0026#34; ;; terminals as popups \u0026#34;^\\\\*eshell.*\\\\*$\u0026#34; eshell-mode \u0026#34;^\\\\*shell.*\\\\*$\u0026#34; shell-mode \u0026#34;^\\\\*term.*\\\\*$\u0026#34; term-mode \u0026#34;^\\\\*vterm.*\\\\*$\u0026#34; vterm-mode help-mode compilation-mode ;; magit stuff \u0026#34;^magit:*\u0026#34; magit-mode \u0026#34;^\\\\*Ilist\\\\*$\u0026#34; ;; R console that comes with ESS \u0026#34;^\\\\*iESS\u0026#34; iESS-mode \u0026#34;^\\\\*R\\\\*\u0026#34; ;; R-help windows \u0026#34;^\\\\*help\\\\[R\\\\]([a-z]*)\\\\*\u0026#34; )) ;;grouping popups by projectile groups (setq popper-group-function #\u0026#39;popper-group-by-projectile) ;; popper UI configguration (setq popper-modeline nil) (popper-mode +1) ;; echo area hints? (popper-echo-mode +1) ) 13 Garbage #13.0.1 from customize API #This keeps the init.el cleaner and without junk from customize.el API allows for an option to gitignore your custom.el cause it\u0026rsquo;s junk.\n;; Offload the custom-set-variables to a separate file ;; (setq custom-file \u0026#34;~/.emacs.d/custom.el\u0026#34;) (setq custom-file (concat user-emacs-directory \u0026#34;/custom.el\u0026#34;)) (unless (file-exists-p custom-file) (write-region \u0026#34;\u0026#34; nil custom-file)) ;; Load custom file. Don\u0026#39;t hide errors. Hide success message ;; OR DON\u0026#39;T EVEN BOTHER WITH IT ;; (load custom-file nil t) 13.0.2 from backups and autosaves(?) #\n;;; Put Emacs auto-save and backup files to one folder (defconst emacs-tmp-dir (expand-file-name (format \u0026#34;emacs%d\u0026#34; (user-uid)) temporary-file-directory)) (setq backup-by-copying t ; Avoid symlinks delete-old-versions t kept-new-versions 6 kept-old-versions 2 version-control t auto-save-list-file-prefix emacs-tmp-dir auto-save-file-name-transforms `((\u0026#34;.*\u0026#34; ,emacs-tmp-dir t)) ; Change autosave dir to tmp backup-directory-alist `((\u0026#34;.*\u0026#34; . ,emacs-tmp-dir))) ;;; Lockfiles unfortunately cause more pain than benefit (setq create-lockfiles nil) 14 Defaults #Primarily bootlegged from Sanemacs and changed when appropriate (and when I thought I understood what I was doing)\n14.1 Disable native popups(?) and bell #;; not sure what this is about ;; (setq-default indent-tabs-mode nil) ;; disable popups? ;; (setq pop-up-windows nil) ;; Disable bell sound (setq ring-bell-function \u0026#39;ignore) 14.2 Only y or n prompts for speed #Apparently there is a short-answers variable\n;; (fset \u0026#39;yes-or-no-p \u0026#39;y-or-n-p) (setq-default use-short-answers t ;; Ok to visit non existent files (no confirmation reqd) confirm-nonexistent-file-or-buffer nil) 14.3 Merge Emacs and system clipboards #;; Merge system\u0026#39;s and Emacs\u0026#39; clipboard (setq-default select-enable-clipboard t) 14.4 Overwrite selected text #\n(delete-selection-mode 1) 14.5 Join line to following line #Plagiarised from pragmatic emacs. For the reverse, emacs has a slightly obscurely named command delete-indentation which is bound to M-^ which can be rather useful. From the help for the function (which you can always look up using C-h k M-^ or C-h f delete-indentation)\n;; join line to next line (global-set-key (kbd \u0026#34;C-j\u0026#34;) (lambda () (interactive) (join-line -1))) 14.6 Simpler kill buffer behaviour #\n(defun peremacs/kill-this-buffer () (interactive) (kill-buffer (current-buffer))) (global-set-key (kbd \u0026#34;C-x k\u0026#34;) \u0026#39;peremacs/kill-this-buffer) 14.7 Kill without accessing clipboard - reassess if this is really necessary #(defun peremacs/backward-kill-word () (interactive \u0026#34;*\u0026#34;) (push-mark) (backward-word) (delete-region (point) (mark))) (global-set-key (kbd \u0026#34;M-DEL\u0026#34;) \u0026#39;peremacs/backward-kill-word) (global-set-key (kbd \u0026#34;C-DEL\u0026#34;) \u0026#39;peremacs/backward-kill-word) 14.8 Return to last position in buffer #Opens files at last position used. Something about this on Emacs Wiki\n(save-place-mode 1) 14.9 Prompt before closing Emacs #;; Confirm when killing Emacs (setq confirm-kill-emacs (lambda (prompt) (y-or-n-p-with-timeout prompt 2 nil))) 14.10 Prevent angle braces from throwing errors #(modify-syntax-entry ?\u0026lt; \u0026#34;.\u0026#34;) (modify-syntax-entry ?\u0026gt; \u0026#34;.\u0026#34;) DISABLED 14.11 Don\u0026rsquo;t follow symlinks #;; don\u0026#39;t follow symlinks? hopefully this solves the ;; `symbols function definition is void: org-file-name-concat\u0026#39; error (setq vc-follow-symlinks nil) 15 Code utilities #TODO 15.1 Templates and snippets with minad\u0026rsquo;s tempel #Seems a lot simpler than yasnippet but will have to work on templates.\n(use-package tempel ;; Require trigger prefix before template name when completing. ;; :custom ;; (tempel-trigger-prefix \u0026#34;\u0026lt;\u0026#34;) :bind ((\u0026#34;M-+\u0026#34; . tempel-complete) ;; Alternative tempel-expand (\u0026#34;M-*\u0026#34; . tempel-insert)) Configuration: I\u0026rsquo;m setting the tempel-path because it defaults to ~/.config/emacs/templates which I don\u0026rsquo;t use. But I think I\u0026rsquo;ll eventually switch to something like that.\n:init (setq tempel-path \u0026#34;~/.emacs.d/templates\u0026#34;) Setup completion at point\n(defun tempel-setup-capf () ;; Add the Tempel Capf to `completion-at-point-functions\u0026#39;. ;; `tempel-expand\u0026#39; only triggers on exact matches. Alternatively use ;; `tempel-complete\u0026#39; if you want to see all matches, but then you ;; should also configure `tempel-trigger-prefix\u0026#39;, such that Tempel ;; does not trigger too often when you don\u0026#39;t expect it. NOTE: We add ;; `tempel-expand\u0026#39; *before* the main programming mode Capf, such ;; that it will be tried first. (setq-local completion-at-point-functions (cons #\u0026#39;tempel-expand completion-at-point-functions))) Hooks\n:hook (prog-mode . tempel-setup-capf) (text-mode . tempel-setup-capf) ;; Optionally make the Tempel templates available to Abbrev, ;; either locally or globally. `expand-abbrev\u0026#39; is bound to C-x \u0026#39;. ;; (add-hook \u0026#39;prog-mode-hook #\u0026#39;tempel-abbrev-mode) ;; (global-tempel-abbrev-mode) ) 15.2 Snippets #(use-package yasnippet :disabled :config (yas-global-mode 1) :diminish yas-minor-mode) 15.3 Syntax checking with Flycheck #(use-package flycheck :defer t :hook (prog-mode . flycheck-mode) (org-mode . flycheck-mode) (sh-mode . flycheck-mode) :diminish flycheck-mode ) 15.4 Bash - use tabs instead of spaces #Maybe this needs to be universal but this is especially annoying when I edit void-packages \u0026rsquo;template\u0026rsquo;s which specifically need tabs in the custom functions below.\n(add-hook \u0026#39;sh-mode-hook (lambda () (setq-default indent-tabs-mode t) (setq-default tab-width 8) (add-to-list \u0026#39;write-file-functions \u0026#39;delete-trailing-whitespace))) 15.5 Auto-paired parens #(electric-pair-mode 1) (setq electric-pair-preserve-balance nil) 15.6 Show matching parens #(show-paren-mode 1) ;; Worst possible setting with this theme - it sucks balls ;; (setq show-paren-style \u0026#39;expression) 15.7 CUA mode #(setq cua-enable-cua-keys nil) ;; for rectangles, CUA is nice (cua-mode t) 15.8 Aggressive indentation coz OCD #\u0026hellip;and I hate doing it manually and Emacs usually refuses to do it by itself\n(use-package aggressive-indent :config (global-aggressive-indent-mode 1) :diminish aggressive-indent-mode) 15.9 Bug-hunter #\u0026hellip;except those that you can eat\n(use-package bug-hunter) 15.10 cl-libify #Convert all (deperecated) cl symbols to cl-lib\n(use-package cl-libify :disabled) 15.11 Iedit #A more intuitive way to alter all the occurrences of a word/keyword at once\n(use-package iedit) 15.12 Show line numbers in programming modes #\n(add-hook \u0026#39;prog-mode-hook (if (and (fboundp \u0026#39;display-line-numbers-mode) (display-graphic-p)) #\u0026#39;display-line-numbers-mode #\u0026#39;linum-mode)) 15.13 Files from script directories default to shell-mode #Scope for adding more such shit?\n(add-to-list \u0026#39;auto-mode-alist \u0026#39;(\u0026#34;/bin/\u0026#34; . sh-mode)) (add-to-list \u0026#39;auto-mode-alist \u0026#39;(\u0026#34;/srcpkgs/[[:ascii:]]+/template\u0026#34; . sh-mode)) 15.14 Editing root files \u0026amp; privelege escalation for TRAMP if I ever use it #(use-package su ;; :config ;; (su-mode +1) ) 15.15 Whitespace mopup #\n(add-hook \u0026#39;before-save-hook \u0026#39;delete-trailing-whitespace) ;; Delete trailing whitespace on save 15.16 Multiple cursors #This is like C-v, a visual mode in vim/neovim. I stole this from pragmatic emacs.\n(global-set-key (kbd \u0026#34;C-c m c\u0026#34;) \u0026#39;peremacs/edit-lines) 15.17 Delete blank lines and whitespace interactively #Plagiarised from pragmatic emacs\n(global-set-key (kbd \u0026#34;M-SPC\u0026#34;) \u0026#39;shrink-whitespace) 15.18 Autoupdate buffer if files has changed on disk #\n(global-auto-revert-mode t) 16 Languages #16.1 Vimscript for editing neovim init #\u0026hellip;cause neovim sucks and I don\u0026rsquo;t like leaving Emacs in the ideal case. I might end up replacing this with a lua config\n;; vimrc syntax (use-package vimrc-mode) ;; :ensure t (add-to-list \u0026#39;auto-mode-alist \u0026#39;(\u0026#34;\\\\.vim\\\\(rc\\\\)?\\\\\u0026#39;\u0026#34; . vimrc-mode)) 16.2 Lua mode? #I intend to learn and use lua for my neovim config.\n(use-package lua-mode) 16.3 C and C++ ??? #Like really?\n;; (use-package cc-mode) 16.4 El Doc for help in echo area #(use-package eldoc :straight (:type built-in) :hook ((emacs-lisp-mode-hook . eldoc-mode) (lisp-interaction-mode-hook . eldoc-mode) (ielm-mode-hook . eldoc-mode) (org-mode . eldoc-mode))) 16.5 Zig mode #(use-package zig-mode :config (add-to-list \u0026#39;auto-mode-alist \u0026#39;(\u0026#34;\\\\.zig\\\\\u0026#39;\u0026#34; . zig-mode))) 16.6 Yaml # (use-package yaml-mode :config ;;autoloads (add-to-list \u0026#39;auto-mode-alist \u0026#39;(\u0026#34;\\\\.yml\\\\\u0026#39;\u0026#34; . yaml-mode)) ;; indent and new-line on return; the mode enforces spaces instead ;; of tabs (add-hook \u0026#39;yaml-mode-hook (lambda () (define-key yaml-mode-map \u0026#34;\\C-m\u0026#34; \u0026#39;newline-and-indent)))) 17 Terminal #Vterm ftw\n(use-package vterm ;; :ensure t :load-path \u0026#34;/usr/lib/libvterm.so.0.0.3\u0026#34; :init ;; (setq vterm-term-environment-variable \u0026#34;eterm-256color\u0026#34;) (setq vterm-disable-bold-font t) (setq vterm-kill-buffer-on-exit t) (setq vterm-module-cmake-args \u0026#34;-DUSE_SYSTEM_LIBVTERM=no\u0026#34;) (setq vterm-always-compile-module t) (setq vterm-copy-exclude-prompt t)) Make vterm behave like a guake terminal and open below the main window. This can be toggled and opens only one instance per window (afaik). Considering using this feature to not provide a dedicated buffer to vterm so it sticks to the window it was launched with.\n(use-package vterm-toggle :bind ((\u0026#34;C-M-\u0026#39;\u0026#34; . vterm-toggle-cd)) :config ;; reset window layout after kill (setq vterm-toggle-reset-window-configration-after-exit t) ;; toggle behaviour - like a toggle keep it running (setq vterm-toggle-hide-method nil) Show vterm in a window at the bottom\n(setq vterm-toggle-fullscreen-p nil) (add-to-list \u0026#39;display-buffer-alist \u0026#39;((lambda(bufname _) (with-current-buffer bufname (equal major-mode \u0026#39;vterm-mode))) (display-buffer-reuse-window display-buffer-at-bottom) ;;(display-buffer-reuse-window display-buffer-in-direction) ;;display-buffer-in-direction/direction/dedicated is added in emacs27 ;;(direction . bottom) ;;(dedicated . t) ;dedicated is supported in emacs27 (reusable-frames . visible) (window-height . 0.3))) Make counsel use the correct function to yank in vterm buffers.\n(defun vterm-counsel-yank-pop-action (orig-fun \u0026amp;rest args) (if (equal major-mode \u0026#39;vterm-mode) (let ((inhibit-read-only t) (yank-undo-function (lambda (_start _end) (vterm-undo)))) (cl-letf (((symbol-function \u0026#39;insert-for-yank) (lambda (str) (vterm-send-string str t)))) (apply orig-fun args))) (apply orig-fun args))) (advice-add \u0026#39;counsel-yank-pop-action :around #\u0026#39;vterm-counsel-yank-pop-action)) 18 Multimedia #18.1 EMMS for music #(use-package emms :commands emms :config (require \u0026#39;emms-setup) (emms-standard) (emms-default-players) (emms-mode-line-disable) (setq emms-source-file-default-directory \u0026#34;~/Music/\u0026#34;) ;;(dw/leader-key-def ;;\u0026#34;am\u0026#34; \u0026#39;(:ignore t :which-key \u0026#34;media\u0026#34;) ;;\u0026#34;amp\u0026#34; \u0026#39;(emms-pause :which-key \u0026#34;play / pause\u0026#34;) ;;\u0026#34;amf\u0026#34; \u0026#39;(emms-play-file :which-key \u0026#34;play file\u0026#34;)) ) TODO 18.2 View ePubs and PDFs in Emacs #(use-package nov :mode (\u0026#34;\\\\.epub\\\\\u0026#39;\u0026#34; . nov-mode) :config (nov-text-width 75)) (use-package pdf-tools :magic (\u0026#34;%PDF\u0026#34; . pdf-view-mode) :mode (\u0026#34;\\\\.pdf\\\\\u0026#39;\u0026#34; . pdf-view-mode) :config (pdf-tools-install :no-query)) ;; TODO this needs fixing idk why even ;; (use-package pdf-view ;; :ensure nil ;; :after pdf-tools ;; :bind (:map pdf-view-mode-map ;; (\u0026#34;C-s\u0026#34; . isearch-forward) ;; (\u0026#34;d\u0026#34; . pdf-annot-delete) ;; (\u0026#34;h\u0026#34; . pdf-annot-add-highlight-markup-annotation) ;; (\u0026#34;t\u0026#34; . pdf-annot-add-text-annotation)) ;; :custom ;; (pdf-view-display-size \u0026#39;fit-page) ;; (pdf-view-resize-factor 1.1) ;; (pdf-view-use-unicode-ligther nil)) 19 Web #Got most of these from daviwil\u0026rsquo;s literate configuration\n19.1 Gemini #(use-package elpher) TODO 19.2 mail with mu4e #see daviwil\u0026rsquo;s mail.org and the configuration in his literate config.\nTODO 19.3 Browser #19.4 Elfeed for RSS # (use-package elfeed :commands elfeed :config (setq elfeed-feeds \u0026#39;(\u0026#34;https://drewdevault.com/blog/index.xml\u0026#34; \u0026#34;https://sourcehut.org/blog/index.xml\u0026#34; \u0026#34;https://ambikamath.com/feed/\u0026#34; \u0026#34;https://emersion.fr/blog/atom.xml\u0026#34; \u0026#34;https://popagandhi.com/index.xml\u0026#34;))) 20 Footer #;;; configuration.el ends here ","date":"December 4 2021","permalink":"/emacs/literate_emacs_configuration.html","section":"emacs","summary":"","title":"Literate Emacs Configuration"},{"content":"Culture is arguably unique to humans. It possibly arose from the need to manage larger groups of people that congregated near agricultural fields as Jared Diamond suggests in Guns, Germs and Steel1 although it may have originated in tribal or hunter-gatherer societies. It is strongly linked with religion which can viewed as a cement holding together larger population masses. Recent developments in its research suggests two perspectives of culture: an outcome of natural selection which considers humans part of “nature” and culture as a purely human construct which arose as a consequence of advanced emotional intelligence which natural selection (according to believers of this theory) cannot explain. In order to see the effects on natural selection, one has to take a neutral stance.\nIt is established that natural selection cannot be evaded2 and as an outcome of this culture can be viewed as a consequence of natural selection. In other words, culture, in the context of human evolution, was selected for since it subsidised the struggle for life for the group. Individuals have to forego some individual “rights” in order to support the group as a whole. These “rights” include privacy, a certain amount of aggression towards others in the groups – things such a revenge – and so on. This is in essence altruistic which is inherently a group selected trait. The development of fire, agriculture, medicine and later various technologies have indeed helped the human race jump forward in the evolutionary struggle. This is, however, at the level of the group (group here refers to human society).\nOne inevitably comes across workers who suggest that culture has influenced the natural of man and has in a certain sense of the word excluded humans from natural selection. This is possibly true at the level of the individual as a cripple would not be able to survive in the wild as opposed to a healthy individual. Similarly, individuals of advanced age now have higher life expectancy in contrast to those of animals or even pre-society humans since parents are taken care of by offspring. Various other societal precepts have affected how individuals are selected for today. But since group selection offers a better means to justify the situation today, it must be viewed in that perspective.\nNow the question arises that evolution produces only advanced species that are best adapted to survive in the world and that since humans have the added ability to “think” and “analyse” the consequences of this “advance” might not be sustainable. This may be true albeit since evolution is merely the accumulation of adaptions, any form of foresight (that is required in the intelligent design of humans) in the adaptations of species that have been brought to existence by evolutionary mechanisms. Sustainability is merely a human construct whose proponent is culture. This hence further reinforces the hypothesis that culture and all of its corollaries are a consequence of natural selection.\nIt can thus be concluded that cultural evolution has only affected individual survival while at the group level, it is but a consequence of natural selection.\nDiamond, J. M. (1998). Guns, germs and steel: a short history of everybody for the last 13,000 years. Random House.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nDawkins, R. (1989). The Selfish Gene. Oxford University Press. New York: Oxford University Press.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"March 6 2018","permalink":"/blog/2018/03/how-culture-has-affected-natural-selection-in-man/","section":"blog","summary":"","title":"How culture has affected natural selection in man"},{"content":"Pets and feral animals have been shown to cause great amounts of destruction to native wildlife, but since very little research has been done in that field, things remain unclear. Most of the cases where the extreme case of extinction occurred were on islands, but this does not indicate that the mainland is safe from this. A lack of visible evidence, either scientific or not, does not indicate that such animals are not killing wildlife regularly, or that the consequences of having them around are negligible. There are several signs that some areas may be more vulnerable to the effects of invasive animals than others.\nIntroduction #For those of you that haven\u0026rsquo;t read my earlier article on the issues with keeping free ranging pets and having stray carnivores, I would recommend going through it first although it is not an absolute necessity to understand the concepts explained here. Also, some evolutionary concepts are dealt with so for a better understand consider going through my articles on evolution as well. Note that this is a clarification to those who are not convinced of the issues brought to light in the older article. I will also explain the issues associated with the introduction of non-carnivorous pets in a previously undisturbed environment. The driving factor behind my writing this article was conversations with people not familiar with the scientific way of thought that made me realise that unless the complete issues are spelled out, the ideas will not be understood. Additionally, another snake was nearly killed recently by an adopted feral cat (refer to my older article for the details of the snake killed). It must also be noted here that pets not only include cats and dogs but also livestock such a cows, goats, sheep and buffaloes.\nThe consequences of the introduction of animals into an area previously unexposed to it can be very subtle for the lay mind to comprehend since the interactions between humans and the environment are virtually ignored. Inter-connectedness is the quintessence of ecology without which none of its theories can be justified. Similar are the consequences of introducing alien plant species (alien here refers to those species from often from other continents, but not necessarily always so) or with disease. Lantana camara was introduced in India a couple of hundred years earlier and today it has replaced the understory in most of the peninsular dry deciduous forests and occupied a great portion of the arid scrub jungles. It, however, cannot be easily removed (as is with the case of free ranging pets and strays) as now several other animals and plants have developed certain crucial interactions with Lantana. Removal of Lantana has been largely unsuccessful for various reasons, which is atleast in this case advantageous but it may not be the case always.\nWhat I wish to make clear through the course of this essay is that human intervention in the functioning of the Earth\u0026rsquo;s environment can no longer be ignored since human presence has grown disproportionately in the last few thousand years. This means that the repercussions of even growing food for even a tenth of the current population are so great that it could drive several species of native wildlife extinct.\nIsolation in its various forms #What in essence happens when a ecosystem, previously unexposed to a certain kind of animal or plant, is suddenly introduced with an alien species? Tribal communities living in isolation were exposed to disease such as common cold and other such diseases by visiting people from modern society which spread rapidly (examples of which are seen in the Jarawas and explained in Jared Diamond\u0026rsquo;s Guns, Germs and Steel). But note that this is a closed environment. Such tribals typically live outside cities with limited interaction to the outside world. The consequences of the introduction of an alien species is typically the same in several cases. Unprepared and susceptible, at the mercy of the new species, most are affected, usually adversely. This must is to be kept in mind albeit it should also be adverted to the fact that this doesn\u0026rsquo;t occur in all cases.\nIn talking about carnivorous pets in my last article, I got too carried away by them and failed to touch on the consequences of herbivorous “pets” on undisturbed ecosystems, as was pointed out in one of the comments. What should one expect with free ranging herbivores such as cows and other livestock in such a scenario? Numbers of individuals introduced here are insignificant since the “lethal dose” of number of these animals will in any case be attained over a short period of time. Herds of goats and cows feed over large tracts of grass covered areas which is usually unable to regenerate due to their continuous onslaught. The effects are naturally amplified (given the additional absence of carnivores) in the case of smaller herbivores such as rabbits and hares which breed rapidly and clear large stretches of grassland. Uncontrolled grazing results in the denudation of natural forest in its various forms and hence native herbivores are the first hit. Since the native fauna and flora maintained an equilibrium between plant consumption and animal population, this is now disrupted.\nSo when do the effects of introduced species get felt? I have already suggested that extinctions due to introduced species has a high prevalence in the case of islands. What about islands is so peculiar? I will return to these questions a little later in the essay. A stable ecosystem is one where the population of each species is regulated or maintained in spite of predation, herbivory and other such interactions. That is to say that if a certain number of (for example) a bird species are killed each year, that species continues to survive because over time new individuals replace those lost. The predators continually switch over to alternate food sources and hence the pressure on the prey reduces (from the constant high pressure offered by specialist predators, which are typically rare in the wild). This is usually seen if the ecosystem is spread over a large area with a sufficiently large population of prey that is distributed through the area, allowing movement of populations across the area. If the predator species kill too many individuals of that bird species, the predators will have nothing to feed on and hence will die out with the bird population, but this extreme is quite rare. This is usually avoided and such an equilibrium is in all cases maintained by varying numbers of predator and prey. The same is the case with plant species and herbivores. Such plasticity exists in all ecosystems.\nIslands are continually changing in their species composition. Rather than having an equilibrium between populations of species, there is a balance between extinctions (or to be more precise extirpations) and immigrations. A limited availability of resources allows only a small number of individuals to reside on it (excesses are not trimmed off and eventually drive the species extinct). The number of species also is considerably lower than on the corresponding mainland. Combined, the two mentioned factors allow a very low number of species, represented by a very small population inhabiting the island. Hence, local extinctions are frequent and seemingly causeless, although minor changes of any aspect are the cause. The same is the case with fragmented forests and “islands” on the mainland. Once extinction occurs, there is a greater likelihood of “immigrating” species to establish themselves. This fragile state of island biodiversity prevents the continuity of life once an invasive species is introduced since minor changes can disrupt the species composition. In addition, islands are more likely to have species that although might have evolved from those of the mainland, are considerably different and hence endemic. The extirpation (or extinction) of a species implies that the species that comes in its place could be altogether different, hence endemics and in most cases even other species lost on an island are lost forever. Island fauna is also tame since exposures to predators are typically lacking due to the absence of such a selection pressure.\nIsolation also can be created by the construction of man-made barriers, especially in the case of plants and herpetofauna and other fauna with limited mobility. Roads, canals and other such structures limits further their mobility. Other more subtle selective pressures applied could also play a role in this.\nSome form of isolation that is seen in cases where species have been introduced, plays an important role. Islands are isolated since they are less easily accessible to reptiles, amphibians and most plants from almost anywhere else. Plants, as already suggested cannot bear the brunt of the advance of herbivores unlike animals which tend to, over time, develop behavioural adaptations. There are however more complex forms of isolation, even on the mainland, explained below.\nConsequences of invasion #Island fauna, as mentioned above, is tame and hence introduced predators (such as cats and dogs) can approach them without having to expend energy in stalking and other forms of subtlety. In the case of flora, islands are as susceptible to denudation as the mainland as plants (unlike animals) are not as dynamic and cannot survive the onslaught of a rapidly growing population of herbivores. Forest fragmentation ensues in part due to overgrazing by livestock and the removal of forest cover to meet food requirements with agriculture.\nAs a result of forest fragmentation, an original population of a species specific to that forest type, becomes isolated in these pockets. In most cases, likely including that of birds, the individuals from each region cannot or do not migrate to others due to territorial boundaries. The consequence is small unstable populations of species that are extremely susceptible to extirpation for a variety of reasons. Inbreeding causes loss of genetic diversity and consequently deleterious mutations accumulate causing lower likelihood of survival; loss of genetic variation also increases the risk of extirpation by zoonotic disease, which has been shown to have a greater prevalence in the fauna inhabiting fragmented forests even otherwise, such as in the case of Lion-tailed Macaques (Macaca silenus) and Civets in the Western Ghats (and additionally other mammal species); and predation itself can very likely wipe out the small population, the risks of which are greatly increased by introduced (typically animal) species which are either better adapted to hunting, or through competition for limited food resources.\nCows and other livestock are generally kept in large groups such that the yield of milk will be sufficient to not only satisfy individual and family needs but for its use as a commercialized source of livelihood. The cattle has to be provided not just dry feed but need fresh fodder for which a good source is grass in scrub jungles and meadows, and several shrubs in the same and other types of forest. These are readily used. As sensible as this may sound, large numbers of cattle are detrimental to the forest ecosystem. Selective feeding on plants, that is subsidised from predation by human intervention can result in the formation of an imbalanced ecosystem: native herbivores lose out on vital food resources and hence drop in numbers as a result of which predators are affected. This leads to a more permanent loss of forest cover in part since less faeces in the soil implies less fertility and hence native plant species don\u0026rsquo;t survive and disperse. The paucity of plants adversely affects bees, other pollinators on which birds and some animals feed, and affects native herbivore populations which again impacts the predators. This cycle repeats itself several times to leave either small fragments of forest or none at all and as a result not one but several species of biota is impacted.\nDisease of animals, known as zoonotic disease, are on the rise as a result of close interaction of wildlife and humans. Diseases of urban and man-made origin are now prevalent in several feral and domestic animals. With the high incidence of these animals entering native forests, these diseases very likely will be transmitted to wildlife and being unequipped to deal with such, a large number of individuals will be lost. Additionally, forest fragmentation by human activities reduces wildlife to even smaller groups of individuals that face a greater likelihood of contracting zoonotic diseases from nearby human settlements. Smaller populations that have limited interaction with each other are more susceptible to disease. Diseases of livestock such as rinderpest are known to affect not only wild bovine species but reportedly affect cervines (i.e. Deer) and other related wildlife.\nSpecies, selectively impacted by disease or predation, can cause additionally complications. Disease of carnivores resulting in their extermination causes a boom in herbivore populations which as a result of overgrazing leads to loss of habitat. A cascade of extinctions are likely to follow: this loss of food sources for herbivores can be detrimental to other herbivores which would have to resort to migration to survive and would otherwise perish. Any predatorial species dependent on these animals would also suffer. A similar result can occur by the loss of herbivores to disease or predation: with less fertile faeces, lowered fertility reduces the dispersal of trees or selectively propagates certain species which may or may not be beneficial to the ecosystem; the predators due to a lack of prey die out.\nSolutions #Possible ways feral animals can be controlled are few: culling and sterilisation are possibly the most effective and easily implemented, although these are quite inhumane. Rescue agencies in cities catch and tend to such animals and usually give the animals out as pets later. This could be a more sensible and humane method although excesses have to be dealt with rapidly. Sterilization might be in the longer run more effective. Keeping domestic and adopted cats indoors at all times is the possibly the only way their killing of wildlife can be prevented. Dealing with cattle in India is further complicated by the fact that cows are considered sacred. I shall not advocate any measure to deal with cattle for this reason (although probably I will write about this issue later).\nIt now is apparent that these issues have to be better studied and areas that face greater risks have to be identified. Measures taken will have to be specific to those areas and have to be implemented rapidly without fail.\n","date":"June 15 2017","permalink":"/blog/2017/06/pets-put-in-context/","section":"blog","summary":"","title":"Pets, put in context"},{"content":"","date":null,"permalink":"/series/responsible-pet-ownership/","section":"Series","summary":"","title":"Responsible Pet Ownership"},{"content":"Policy with respect to sustainability in India has never been top priority, until very recently. It has often been fraught with people\u0026rsquo;s predispositions that should never have come about in the first place. I will be talking about the ways of a singe man I know, let\u0026rsquo;s call him Devdas (original name withheld for various reasons) and how almost all of his actions were made knowing about the state of wildlife in India.\nIn my 21 years, one word that I\u0026rsquo;ve heard consistently in discussions of any sort is sustainability. Due to its overuse, particularly very frivolously, I must say over the years the word has lost its meaning but the concepts have somehow become clearer (as a result of my own digging and research). Being from a school with a rich biodiversity in its very own campus, this isn\u0026rsquo;t a very heartening thing to hear. What I don\u0026rsquo;t understand, however, is the fact that actually very few people that I\u0026rsquo;ve interacted with in my latter 18 years get involved in either the conservation of wildlife or the policy making it closely associates with. This becomes clearer when one understands the latent intrinsic characters of the people that run the school, albeit that is a topic for an essay by itself. As I will write in most of my upcoming papers, the fauna and flora of the Eastern Ghats has not received much attention and the cause and outcome of this is seen in the people that inhabit the region.\nBeginnings #The person whom I will be talking about is from a rural region of the Eastern Ghats, probably on the coast. His upbringing was in the medium of the language spoken in that place and definitely excluded the hot topics of biodiversity, conservation, and sustainability. Most of his childhood was spent trying to find means of indulging in fun and frolic without being discovered by (possibly) strict parents. The parents would also have been quite unaware of such issues as they would have been labouring to make ends meet. This person, like all others in his village, wanted to come up in life and so he took up the course of education that was necessary for the challenging exams one was required to clear for a career in Chartered Accountancy. Usually a well paid discipline, he had to settle for a not-so-high salary post in a remote school. That was where I met him. It might have been some nine or ten years ago that Devdas first came to work in this school. Since I was studying in that school, and during vacations everyone staying back met frequently (not to mention knowing each other fairly well) we saw each other very often. Devdas was a young chap, maybe in his twenties then, fairly naïve (as was I: naïve, not in my twenties!) and with a keen inferiority complex. His English was not the best as a result of which he would interact only with a select group of individuals, mainly those he though were “in his league”. He was jovial in the sense that he wanted to lighten the generally hostile environment that he lived in to make his time alone pass along faster. Initially I talked to him a lot, and every time I went to his spartan apartment, there would be eggs lying around in the kitchen and a pile of old accountancy textbooks in a corner gathering dust. I never knew how he passed his time because soon after I got a new friends circle and he was not in it. I did still say the occasional hello and what\u0026rsquo;s up, but that was all.\nNow I don\u0026rsquo;t know what his life was like in truth in the few years that I didn\u0026rsquo;t meet him or talk to him. All I heard after this period, which lasted nearly 8 or nine years, was rumours and more rumours, all of which is completely irrelevant here. A change that I had seen was that he had bought his own new motorbike and used it to travel even to the place he worked that was barely 200 meters away from where he now stayed. He had made several new friends and some that lived elsewhere even stayed with him when they visited. However, certain other aspects of his character, I could never understand, whether they were new because I had not gotten to know him earlier. It is those that I will be talking about here.\nAn ode to plastics, the wonderful! #If asked to lecture on the science behind plastics, both Devdas and Donald Trump would very likely say the very same things. On a trip to the nearby village, as usual on his motorbike, we purchased a large bag of pakodas diligently wrapped in old newspaper, tied with synthetic string and finally placed inside a black plastic bag. To wash hands we got some plastic packets of water, a cheaper alternative to buying the unnecessary plastic bottle (we didn\u0026rsquo;t want to spend that much money). Of course, I enjoyed eating this fast food, excessively oily, salty and essentially the bane to human existence, as did he. Now in his thirties, he continues to eat this junk and has the nerve to talk about maintaining health! (That, I will write about another time just for the sheer hilariousness.) Well, we found an isolated sheet rock that was easy to access, as the numerous broken bottles of alcoholics indicated, we ate and finally when the time came to dispose of (what I knew to be non-biodegradable) plastics and paper, he did the most predictable thing. He got up and walked to his motor bike. Of course, after tossing aside, with almost a certain flair, the oily newspaper, the plastics and bits of leftovers. I looked at him inquisitively and, finally realising subtlety was not his forte, asked him why he had left the plastic there. He merely waved me off and we left. I was not satisfied. This happened again soon after, and again, and again and again. Put simply this was what would happen every time he went out. So eventually I confronted him one day. His explanation was probably the most well thought out and, as you shall see why, transformed the way I think entirely. I mean, the way I think about him. Of course not the way I think about plastics!\nBiggibee [thats what he calls me, a corruption of Big-B], why you worry? This plastic and all will go in 2 or three years! Go to that place where they dump plastics. It will not be there in some years.\nI say that it\u0026rsquo;s because people collect it and dump it elsewhere and that plastic is not biodegradable.\nNo yaar! Not like that! I have seen! Plastic will go!\nI remind him that cows and other animals including wildlife eat that and die. After two minutes silence:\nNo yaar. Nothing like that.\nWell, I kept quiet since I realised how futile it might be to have an argument about something he was so convinced about.\nHalf a year down the line, we still go out to eat, sit in the same places and do the same things. I ask him about it once in a while but don\u0026rsquo;t press for a definite answer.\nIf you\u0026rsquo;re not a drinker, you still can have fun with bottles #Even if we aren\u0026rsquo;t eating anything he sometimes likes to just go to these rocks which in the evenings and mornings are undisturbed. Usually he parks his motorbike near these rocks and get on with his work. Although the purpose of his going there is to sunbathe or do some exercise on the road shoulder (I still don\u0026rsquo;t understand why he shows a preference for such a spot do do this), he first scans the rocks for empty liquor bottles left behind by careless drinkers. He goes over and picks them up giving an impression that he might actually do the place a service. The very first thing heard is the sound of glass shattering. Sometimes pieces of the shattered bottle hit you, if you\u0026rsquo;re close enough. Then one can hear the laughter of satisfaction. I once told him (sarcastically, but convincingly) that glass is the same as sand in its chemical composition, expecting him to be overjoyed but he was completely unconcerned. Just mildly amused. He went about doing his social service, sometimes with a little creativity: he would rest the bottle on the rock and fling a stone the size of a clenched fist or even larger at it and watch in satisfaction as the bottle fragmented. Another time he flung a small hard bottle against a larger fragile bottle and merrily witnessed the results. Even large pieces of glass upset him. He crushes those underfoot. I did try explaining to him that there are a lot of animals that live near these rocks and that his breaking those bottles does them anything but good. He shrugged this off as he did with the case of plastics.\nThe scam that is waste disposal #The school that we live in has, over the years, transformed waste disposal into a systematic process wherein the separation of different types of refuse is integral. It is very evident that without this, piles of accumulating waste attract domestic pests, pollute the place rather than anything else and on the whole make it extremely unpleasant and hazardous to not only human but also other life. Organic refuse can be composted, plastics and glass can be reused and metal can be recycled. However:\nWhat yaar Biggibee! All these * * and * ** [names withheld for various reasons] simply bought four-four new dustbins yaar.\nHis stock of old soft drink bottles (all plastic), soft drink tetra-packs, plastic shopping bags, kitchen wastes (often including packaging, plastic of course), and almost anything else is bundled into a large polyethylene bag and dumped randomly into any one of the four dustbins provided. Franky, at this stage, I\u0026rsquo;m not shocked or anything.\nHis obsession for soft drinks is now a die hard habit. Purportedly, soft drinks are far better than the drinking water provided here for the reason that the water (as opposed to soft drinks such as Coke, Thums up, Appy Fizz, etc) makes him fat. Okay, I\u0026rsquo;ll admit the water here is hard, but that signifies nothing! Aerated drinks, such as those he\u0026rsquo;s shown a preference for, are but concentrated sugar and carbon dioxide! (I am very seriously considering writing a character analysis about him as we used to in school about characters in plays!) Getting back to the topic at hand, he buys these not in large bottles but in small plastic tetra-packs and tin cans. When asked what he does with these, he once said that he keeps them after use and uses them to drink from rather than using large bottles. That is something that not just I but several others would disapprove of, and on various levels. In any case, he does not do what he says he does as you would have expected. He disposes of them as I described above.\nI only let what I want inside my house #Knowing that a long line of interns and volunteers have been conducting a project on a lizard species here, he often used to ask me if any of them would like to catch lizards in his house, since their job was to catch lizards anyway. Attempts at explaining that the species of lizard that they study is so vastly different are futile as that doesn\u0026rsquo;t mean anything to him. Although this is said lightly, this tendency of his is of interest and I may write of it elsewhere. His descriptions of the menace cause by the lizards is often very humorous.\nThese lizards, no, they put their dung everywhere.\nWhat dung? I ask, seriously wondering what on earth he\u0026rsquo;s talking about.\nArre yaar! Their shit!\nI don\u0026rsquo;t bother any further. I don\u0026rsquo;t understand what those lizards have done to him that he hasn\u0026rsquo;t himself! It turned out that, as I found out much later, he had bought a toy gun that actually shot at fairly high speeds small plastic balls and a laser pointer with which he used to accurately shoot these house lizards to death. When someone is stubborn and hell-bent on doing something so ridiculously elaborate, I\u0026rsquo;ve found out that, more often than not, its best to let them do as they wish.\nAmphibians are the other unwelcome guests to his house. Toads that usually migrate towards anywhere that they get more food, such as under a light source, migrate to the top of the stairs to his door where he keeps his shoes. Somehow, these toads climb into his shoes and stay there until he accidentally touches them while putting on his shoes. Once this has happened, he empties the shoe over the stairs, dropping the toad a whole story down. Once he has worn the shoes, he then picks up a bamboo stick (which I\u0026rsquo;ve seen him use only in the way mentioned) and on finding the toad nails it to a concrete or stone surface with the stick and crushes it. You can almost guess his answer when asked what he\u0026rsquo;s doing that for:\nArre this frog is simply coming into my shoe. I will teach it not to do it again.\nHow can you teach a toad (not a frog) by crushing it?\nArre if I hit it, it will not come back.\nYeah, well, I can\u0026rsquo;t argue with that logic can I?\nConsequences of this mindset #A whole country thinking this way only makes things harder for implementing sustainable policy. Even the best of governmental policy if not understood by the people, comes to no good. What the best school in the country has failed to do is to educate such people about such issues and that definitely doesn\u0026rsquo;t sound good. I do not intend to pin the blame on any one, least of all the school, but it is these antisocial elements that spread negative influence and why this mindset still prevails, as did happen with the Jallikattu protests. What I have described here is a limited perspective of the bigger issue at hand, the same that probably took the Jallikattu protests forward to the large scale that it achieved. That I will be talking about in another article. Indiscriminate killing of wildlife, damaging wildlife irreversibly alters the interactions between species which are a fundamental requirement of ecosystem maintenance. Hence sustainability goes out of the window as soon as one meddles with other life forms. That is not saying much because human existence today already causes so much interference with pre-existing life forms. It can hardy get worse, and this I say not in a positive way. If anything, human should strive to reduce unnecessary contact with wildlife that can potentially damage it. That was about the effects of direct interference. Improper waste management, unsustainable practices and other such contribute to indirect effects. The indirect effects have already caused significant damage. If it isn\u0026rsquo;t realised immediately, as should the issue of global warming (which the world\u0026rsquo;s biggest superpower ignores so conveniently) it is inevitable that the apocalypse will occur. The only cure to this is a scientific or methodical approach to thought which I have written about in the first part of the essay on evolution. I may have missed our several aspect so these issues and probably even some important ones. I hope to cover those in the other articles that should be up later.\n","date":"March 20 2017","permalink":"/blog/2017/03/sustainability-and-the-common-man/","section":"blog","summary":"","title":"Sustainability and the Common Man"},{"content":"","date":null,"permalink":"/series/evolution-theory/","section":"Series","summary":"","title":"Evolution Theory"},{"content":"Who does really understand evolution? (Wait, is it even true?!) Even if it is, who really has the better idea? What the hell did Darwin really do on the Beagle? Well, I have some answers. In this two-part essay, I will be discussing how to understand evolution as a concept and will be touching upon the babble behind the scenes. This part is a general background to the concept of evolution, dealing with the \u0026ldquo;story\u0026rdquo; behind it rather than the concepts themselves. The second part will deal with the theories of evolution and their finer aspects.\nIntroduction #When I was in school, I found that a lot of the concepts that I thought I understood were actually more complicated. Obviously, I had to wait till the exams to realise this. But then, I figured that if I could understand what went wrong at that time, anyone could, and additionally prepare in such a way that they really understand the concept as a whole, in all its finer aspects. What hampers such precise understanding of facts is assumptions and expectations. Spiritual predispositions and other such forces tend to cloud judgement and, hence, come in the way of logical thought. The other most significant antagonist of scientific thought is (and I don\u0026rsquo;t mean the kind of thought that religious people lack!) the undoubting faith in whatever is told. The inability to question and be skeptical. Now, this might sound weird. It certainly did feel weird when I realised this. But I believe that by the end of this essay, it will be well established that skepticism is the key element to understanding anything. Please note, I intend no animosity towards spirituality and any comments made in this essay are purely light-hearted.\nSetting the stage #Most readers would have come across textbooks that describe evolution with the usual theories and examples. There is Lamarck\u0026rsquo;s theory, which in most opinions, is outdated and eclipsed by the more robust and logical Darwinian ideas. Then come the modern theories of Morgan and others who using Mendel\u0026rsquo;s [then] recently rediscovered ideas, further complicated things. Well, brush all those aside! Throw them out of your head! Science is also about starting afresh once things get muddled up!\nWhat are we talking about? #The misconceptions that are associated with evolution are what the mind has to consciously rid itself off. Why these are present in the first place is another topic altogether which I\u0026rsquo;m afraid I can\u0026rsquo;t talk about (since it just isn\u0026rsquo;t my cup of tea, yet!) and involves understanding the functioning of the mind. Suffice it to say that the mind tends to simplify facts and hence colour the explanation that one receives when trying to understand a concept. The end result is an inaccurate understanding of concepts which a good skeptic sees through when examined finely. These misconceptions I will lay bare here and it must be noted that only once these are understood will the concepts I explain make sense.\n1. Time frames #The underlying processes of evolution have been observed to act over great expanses of time. The study of fossils (Palaeontology) has had a very important role to play in the development of evolution as a concept. Darwin\u0026rsquo;s observations of fossils apart by millions of years played a crucial role in his understanding of his own concepts. Fossils are by no means easily found and this highlights the fact that they are formed in very rare cases. This inherently implies the period in between formation of two fossils of any kind is great. In addition to this, their discovery is fraught with complications that for the purposes of this essay needn\u0026rsquo;t be elaborated. The end result: fossils found are from times so wide apart that any changes seem obvious.\nThose of you that have seen the film The Man from Earth, would have an idea as to what (spoiler alert!!) someone who lived for fourteen thousand years would have experienced in a life so long. But the common man would find it challenging to comprehend even those time scales involved. Although I could go on about timescales, I\u0026rsquo;d rather get to the main idea of the talk earlier so I\u0026rsquo;ll share a much-clichéd analogy to make this concept clear.\nIf you represent the Earth’s lifetime by a single year, say from January when it was made to December, the 21st-century would be a quarter of a second in June – a tiny fraction of the year. But even in this concertinaed cosmic perspective, our century is very, very special: the first when humans can change themselves and their home planet….\n… let’s suppose some aliens had been watching our pale blue dot in the cosmos from afar, not just for 40 years, but for the entire 4.5 billion-year history of our Earth. What would they have seen? Over nearly all that immense time, Earth’s appearance would have changed very gradually.The only abrupt worldwide change would have been major asteroid impacts or volcanic super-eruptions. Apart from those brief traumas, nothing happens suddenly.\nThe continental landmasses drifted around. Ice cover waxed and waned. Successions of new species emerged, evolved and became extinct. But in just a tiny sliver of the Earth’s history, the last one-millionth part, a few thousand years, the patterns of vegetation altered much faster than before. This signaled the start of agriculture.Change has accelerated as human populations rose. Then other things happened even more abruptly. Within just 50 years — that’s one hundredth of one millionth of the Earth’s age — the amount of carbon dioxide in the atmosphere started to rise, and ominously fast…\nThis explanation illustrates the time periods that have shaped the earth. Human presence graced the earth for so short a period that what we see in the world today is exceedingly limited. Those are the timescales that evolution acts over.\n2. Generational factors #A very frequently misunderstood aspect of evolution is the strata of organisms evolution affects. This is closely linked to the first miscalculation of time frames as you shall see.\nThe most common idea the people have is that evolution occurs in the individual. The \u0026ldquo;learnings\u0026rdquo; of one individual are directly transferred to their offspring. This is anything but true. Evolution happens over several generations of individuals. And evolution is more of a consequence of other changes; individuals of a population don\u0026rsquo;t change as a result of evolution. Their offspring accumulate changes over generations that lead to the evolution of a species.\n3. Evolution is not progress #Although there might be evidence of better adaptation to certain environmental factors, there is no progress that occurs as a result of evolution. The whole theory that man is the most advanced being on this planet isn\u0026rsquo;t entirely true. Evidences of alternative forms of intelligence exist in other life forms, and although these may not be on par with intelligence as defined by a human, they certainly are nearly as good in their own way. I won\u0026rsquo;t say any more about this because this isn\u0026rsquo;t the point I\u0026rsquo;m trying to make in any case.\nEvolution is caused by selective survival of individuals better capable of surviving in a very specific environment. This only means that the animal is better capable of surviving in that environment than say others of its original population. It must be noted that this I\u0026rsquo;ve only given as a comparison. The two would interact only if members of the original population still survive, and if they co-occur or are sympatric (in scientific terms), the added constraint of limited resources (amongst other factors) would result in the extermination of the lesser able (that is members of the original population). The so-called \u0026ldquo;struggle for life\u0026rdquo; is only metaphorical; animals don\u0026rsquo;t necessarily fight each other.\n4. When evolution occurred #Evolution has occurred in the past, is occurring now, and will continue to occur in the future. This is commonly confounded by the belief that evolution has occurred and the animals and plants seen today are the final products of all evolution that has ever occurred. This gives evolution a \u0026ldquo;creational\u0026rdquo; position, more or less equal to \u0026ldquo;God\u0026rdquo;. And that is where science differs from God!\nEvolution occurs continually because there some parts of the environment that continually change and to \u0026ldquo;keep up\u0026rdquo; with those, certain individuals of populations are selected out. This also affects all species on earth. The same species that we see today may not exist in the future.\n5. Evolution as a fact #If you think the theories of evolution are fact, that\u0026rsquo;s great! Only they\u0026rsquo;re not. Like all good theories in science, these can only something that can be shown to be true in very specific cases, with some amount of certainty (yes, the theories have not been proven as a fact yet, if you haven\u0026rsquo;t got that already!). As they say in science, a good theory is one that stands the test of time and experimentation. Fortunately, for you believers out there, evolutionary theory has stood the test of time so far. But remember, that this doesn\u0026rsquo;t give any reason to doubt the theory. The theories of evolution make clear many of the \u0026ldquo;unexplainable\u0026rdquo; happenings of the world. I will not be discussing that aspect since I believe that can be done once you\u0026rsquo;ve understood the concept of evolution itself.\nDarwin\u0026rsquo;s influences #Before getting to the theory itself, I feel it would be of good use to look at the story of Darwin and evolutionary theory. But let me get one thing clear before I start with even this: the \u0026ldquo;Darwinian\u0026rdquo; theory of evolution was not Darwin\u0026rsquo;s own. He was too dull-witted to think up the whole thing himself. What he effectively did was compile everything at hand and publish it. Even the idea that he should do this was not his own! It might make more sense, hence, to think of this as the people or ideas that made him sure enough to write about it.\u0026lt;/p\u0026gt; Darwin was actually quite imperceptive. His was a very mundane life and although he had planned on studying medicine, he switched over to the cloth and learned the scriptures instead and this might have played an important role in shaping his thought. He had access to several books in the library and even read some \u0026ldquo;prohibited\u0026rdquo; books (those books which the clergy thought would endanger their popularity by getting people interested in science). One such was the Principles of Geology.\nOf course, there are the well-known books that he carried with him on the voyage of the HMS Beagle: John Milton\u0026rsquo;s Paradise Lost and Charles Lyell\u0026rsquo;s Principles of Geology. Very simply, the graphic descriptions of living creatures and the fascination for them expressed in Paradise Lost and the Principles of Geology got him thinking about world changing changes that take place over periods of large amounts of time.\nAnother major influence may have been his grandfather himself. Erasmus Darwin was a physician and also a poet amongst several other things. In his poems (The Loves of the Plants and The Temple of Nature, it is said that there are mentions of evolution in a similar capacity to what Darwin spoke of in his Origin. Darwin\u0026rsquo;s own teacher, Robert Edmond Grant was said to have purported the same theory and had been considered \u0026ldquo;heretic\u0026rdquo; by Darwin and others of that time. Although Grant had recieved fame worldwide for his other work, his theory brought down upon him disdain.\nSo carrying Milton and Lyell, Darwin finally left on the voyage of the Beagle, at the crisp age of 22, as an unpaid gentleman\u0026rsquo;s companion (I\u0026rsquo;m sorry but that sounds a lot worse than what it is intended to!) to the [then] also young Captain Robert FitzRoy. It is suggested that his predecessor on the Beagle had committed suicide as a consequence of \u0026ldquo;loneliness\u0026rdquo;. I am told Darwin got to travel with the Beagle only because he had the right shape of the nose. Four years later, they landed on the Galápagos Islands hoping to find of all things Giant Tortoises to eat! What happened next was history. Or rather, what happened became history only after several years because Darwin was dumb.\n","date":"February 25 2017","permalink":"/blog/2017/02/misunderstanding-evolution/","section":"blog","summary":"","title":"Misunderstanding evolution"},{"content":"We all love cats, but are they really what we believe them to be? A common perception is that cats are lazy animals and prefer sleeping though most of the day. But has anyone actually seen a cat hunt? Their feline agility coupled with a primal necessity to kill make for an extremely dangerous animal to keep.\nHave any of you wondered what feral cats and many domestic cats do at night? Take a look at the leopard. Many of you would have read Jim Corbett\u0026rsquo;s stories. One particular book comes to mind: \u0026lsquo;The Man-eating Leopard of Rudraprayag\u0026rsquo;. It\u0026rsquo;s a fairly small book that describes a leopard whose usual haunts were the villages around Rudraprayag in what is now Uttarakhand, Northern India. The man-eater was notorious for having killed over a hundred and twenty-five people in its \u0026ldquo;career\u0026rdquo; as Corbett describes it. What is most interesting about the kills was that not a single one took place in daylight. Felids are nocturnal and hence most of the hunting takes place in the dark. Similarly, most feral and domesticated cats are active at night and that\u0026rsquo;s when most of the hunting happens.\nOn the first of December 2016, I was sitting at home in. My father said something which at first I ignored. Then, realising that he\u0026rsquo;d said Goose (my cat) was killing a snake. I rushed out to see that a small brown snake was dangling from Goose\u0026rsquo;s mouth and was struggling to escape. Goose then dropped it and picked it up to get a better grip. It was my mother who suggested I save the snake. It took me a while to get to my senses by which time Goose had inflicted a deep cut into the snake\u0026rsquo;s body. I tried pulling Goose away but was a little worried about getting scratched and bitten. It was futile and Goose was surprisingly intensely focused (which he usually is not) and intent on devouring the ophidian. I asked my mother to get some food for him from the kitchen while I tried to pull him away. It was only after cutting the snake in half that he finally let go. There was nothing left to be done and I kept the corpse aside to identify.\nWhat happened while trying to identify it is another story for another day I found out that it was a Yellow-Green Cat Snake (Boiga flaviviridis Vogel and Ganesh, 2013). Goose, by then, has eaten the rear half of the cat snake and disappeared. But what surprised me the most was that I didn\u0026rsquo;t know of this side of Goose or of his predatory instincts as well as I thought I did. I was, of course, furious at the fact that he\u0026rsquo;d killed a snake, but then what next? Should I continue feeding him?\nA docile cat? #Goose was brought up by my neighbours. He was something of a small guy and smaller than most of the other cats around. He was fed rice and milk with occasional curds but never meat. He was very social and friendly and had no issues with being petted. He was so friendly that he would climb up onto our laps and sleep. Since he was isolated from his mother, who typically would have taught him all the necessary skills to hunt, and also seemed to only sleep all day, I began to think he couldn\u0026rsquo;t hunt and get the right nutrition to grow up. I was convinced of this when he showed absolutely no interest in birds on the ground or in low bushes. Lizards, insects, and spiders were bold in his presence because he just refused to go after them. I usually had to wave spiders in his face for him to get interested in them, and even then he was a clumsy hunter. And for nearly 2 years I was convinced that Goose was the ideal pet. I had, of course, heard of feral cats hunting and killing, just for the joy of it, wild rodents, birds, lizards, and snakes. One of my friends did mention observing a full grown cat taking on a cobra. But Goose was different.\nSeeing Goose kill the snake came as a nasty surprise to me. Even now as I write this I am unable to wrap my head around the irony of a cat killing a cat snake. Some days later my father told me that he\u0026rsquo;d seen Goose carrying a large mouse, and as usual, he \u0026ldquo;showed off\u0026rdquo; his (s)kill by dropping it at the doorstep.\nHunting, but it doesn\u0026rsquo;t stop there #For three reasons, cats and dogs are more successful at establishing themselves over native predators. Cats are protected from disease, not limited by the availability of prey, and least of all limited in numbers by territoriality. They are also immensely successful in places like islands and other naturally predator-free landscapes, where native wildlife has close to no adaptations to help avoid becoming prey.\nPatterns of cats hunting wildlife have been well documented. In the United States itself, some 12.3 billion mammals and 2.4 billion birds are lost to free ranging pets and feral cats every year. There have been innumerable instances of this behaviour in cats from around the world, and animal protection societies frequently suggest keeping cats locked indoors at night or when most wild animals are active (see references for more). Naturalists and conservationists all over the world urge pet keepers to stay informed of their pet\u0026rsquo;s movements and ensure that they are well fed.\nOther issues with free-ranging carnivorous animals are that they carry vastly novel diseases that wild animals they come in close contact with are unlikely to have been exposed to. These typically transmit from humans and other domestic animals such as cattle. Fragmented forest patches often have an inadequate reserves of food for the wildlife in it. Animals such as elephants are forced out and to use the food grown in crops such as banana plantations and sugarcane. Carnivores, due to lack of food venture into human habitation for food and are forced to interact with these feral animals, from which the diseases are more easily obtained. With prevalent fragmentation of forests, wild animals, especially those that live in closed social groups such as macaques and Wild Dogs, get restricted to fragments and hence are more susceptible to epidemics of these diseases. Added to this, certain carnivorous cat species that have very low genetic diversity, can suffer a lot of damage with the added impact of these introduced diseases. Asiatic lions in Gir are a single isolated population and even a few lions contracting something like canine distemper could potentially wipe out the entire population.\nStray and feral dogs that are a very common sight in cities and towns not only pose a health hazard to humans by spreading rabies and other diseases but also attack and kill children. Adults aren\u0026rsquo;t spared from brutal attacks either. Dogs are known to regularly hunt Black-naped Hares and other small mammals. Stray dogs at the IIT Madras campus have been reported to hunt Spotted Deer and on occasion even the endangered Blackbuck. Despite measures taken to capture and relocate dogs from inside the campus, a large number of them are hard to catch and remain in the wilderness. Regardless of such efforts, stray dogs continue to migrate in and out of such places and there\u0026rsquo;s almost no shortage of them at any given point of time.\nIslands are prime examples for cats hunting a species to extinction. The best known example of this is the Stephens Island Wren. The case of the Rockwren was very similar to that of the dodo in the sense that they were found only on a small island. There was a light-house on that island and three keepers lived on the island with their families and a tutor for their children. One or more cats were kept by these families and a cat, known as Tibbles, was notorious for having hunted in its career all the endemic Stephens Island Wren (Traversia lyalli). It is said that the bird went extinct, while it was being discovered for the first time by one of the keepers of the lighthouse. Although this may not be the complete story, it serves as an example of how invasive feral carnivores can destroy native ecosystems. As I have mentioned earlier this isn\u0026rsquo;t the complete story. I will be writing more about this particular case in a later article.\nNew Zealand is also home to a very unique series of reptiles not found anywhere around the globe. Several species have gone extinct in the few thousand years it has been occupied by human beings. There was another cat in whose 17 years of life, it hunted over 558 recorded animals of which 223 were birds. Although the birds survived, the cat is known to have exterminated all the rabbits which it later seemed to prefer. It, however, must be noted that it was not merely cats that were involved in these extinctions but also household pests that accompanied humans onto the islands that played a crucial role.\nLast words: responsible pet ownership #What next? I think the key point to be kept in mind here is responsible pet ownership. This is a discussion riddled in ambiguous ethical principles and accountability is almost never considered. Legal restrictions and various problematic policies on dealing with the issue make it harder to address. I\u0026rsquo;ve tried to discuss this aspect of the issue in another post.\n","date":"January 15 2016","permalink":"/blog/2016/01/a-dark-side-to-pets/","section":"blog","summary":"","title":"A dark side to pets"},{"content":"The disturbed man woke from violent sleep. He wondered to himself of the soundness of his reasons for absence from the deck. His illness. The numerous days that were spent in solitude were of good use to him but wasn\u0026rsquo;t there a better and simpler way of achieving such a thing as confidence? One evasive whale and a megalomaniac at its ghostly tail. If there existed such means, could he have employed it?\nHe toyed with the three month old locks that fell from his pale scalp unkempt. An older beard lined the jaw on an even paler face. He looked at his hands - sinewy and covered with veins that carried blood full of stale air. His gnarled fingernails were black with permanently implanted fragments of meat and dirt from the incessant scratching of the rash, another of his alleged illnesses. Ever since that stump had been rectified with a wooden prosthesis, a rash had erupted on the skin of the stump. He suddenly reached out as if to pluck out the wooden aid but settled for scratching the rash, with more fervour than before, which in turn immediately turned red hot.\nHe cursed out aloud. The reverberations died down as suddenly as they had begun. He straightened his legs off the hammock and stood up precariously. He walked up to the section of wall where his pistols hung, brown with rust and uncared for. He removed the nearest he could grasp from its nail and hobbled back to the hammock. The three months of rest had not healed his stump, even slightly. The pain rose and fell in cycles and eventually numbed out. He clasped the handle of the pistol in his grubby hands and raised it to his head when suddenly he heard a faint almost inaudible knock. Despite the nimbleness of the knock, in the undisturbed silence of the room, it sounded disproportionately loud and sharp. The hand holding the pistol wavered, only for a moment, and the metal hit his ear as it fell. It hit his shoulder and then plonked to the hammock.\n\u0026lsquo;Who is it?\u0026rsquo; he growled in a low monotone. There was no reply. He asked again, raising his voice. There was no response, yet. Exasperated, he shouted the question.\n\u0026lsquo;Stubb, skipper!\n\u0026lsquo;Enter!\u0026rsquo; Ahab said and the door opened to reveal a clean shaven man of about thirty years of age. His scalp was hairless. He was short and as if in lieu of that deficit, his thighs and calves along with his shoulders and biceps were abnormally large. The neck was that of a bear\u0026rsquo;s and appeared an extension of his head. Tremendous volumes of hair erupted from his shirt sleeves, that were folded up to the biceps, and from his neck. The shirt was without a collar and tight fitting. Where its first two buttons failed to find their button holes was a hirsute man. A brute he was, thought Ahab, even that voice was suchlike. He put the pistol elsewhere and adjusted the wooden leg.\n\u0026lsquo;Sir, I have a request from the crew\u0026rsquo; Stubb began.\n\u0026lsquo;Speak for yourself\u0026rsquo; Ahab cut in.\n\u0026lsquo;You must be beyond insane,\u0026rsquo; Stubb said, \u0026rsquo;to proclaim so surely that we hunt down Moby Dick alone.\u0026rsquo;\nNoticing the lamp on the wall, adjacent to the hammock, flickering, Ahab said as though Stubb hadn\u0026rsquo;t spoken at all. \u0026lsquo;Help that lamp live for a while longer. Pour it some oil, dog.\u0026rsquo;\n\u0026lsquo;I will not be spoken to with slurs of the like\u0026rsquo; Stubb said after gathering the most composed demeanour the two insults would let him afford. One would turn into a pile of bones and skin, both broken, if he was spoken to in such a manner. Ahab countered: \u0026lsquo;Then you are no better than a plumped swine. Attend to that lamp you cursed mongrel.\u0026rsquo; There was calm before the storm. Then it came, red faced and cloth tearing.\n\u0026lsquo;You are cursed, Ahab. You are hell bent on doing the impossible and you have a crew hoodwinked to come to your aid. Whalery they say, unaware of what they\u0026rsquo;re out at sea for. Have you signed a pact with the White Whale himself? So he can quench his thirst for the rest of your and our blood?\u0026rsquo;\nThe shouts rang out for moments before the reverberations died down. Calm as ever, Ahab requested Stubb to leave. The other, tensed and ready to strike at Ahab, refused. At this Ahab raised his pistol from beside him and repeated the request. With much anger suppressed and reluctance, the door of the cabin was opened and with its closing departed Stubb.\nPicking up an oilcan, Ahab staggered to the dying lamp and refilled the receptacle. Painfully aware of the overwhelming ache in his thigh-stump, he managed the few steps to the hammock. He cleared it of is contents and lay down.\nAs his hold over his thoughts returned, he contemplated for a few moments what Stubb had said. Had his own days of isolation impacted his cognitive abilities? He probably should change his mind about Moby Dick. After all they were a whaling crew in the business of whaling and not merely marionettes driven by revenge.\nBut then what did that make him? Mediocre and spineless? Cowardly for having exiled himself from the crew? Was his life an embodiment of hopelessness? What had become of him after that shoddy and vile fight with his wife? She probably was accurate about the monomania and stupidity of his. What had become of her - a whore? He had spent his younger days with her before losing himself in whaling, and in those ephemeral shore days between his whaling voyages. The last stretch of time about her was in the time only days before the voyage of the Pequod had begun. Her, with whom he had raised a daughter and son. Where were they? If anything more than a withering memory already in fragments, what had become of them?\nA sudden pang of thirst had him unconsciously reaching out to the empty mug. The odour of the drink kept on the table guided his other hand to its source. It was uncorked. The thoughts that occupied his mind make pouring the drink into the horn a challenge. Instead, drops from the flowing bitter liquid fell to the table and the spray was thrown at his face. He startled and regained consciousness and moved the mug to where the liquor fell on the table. It filled briefly. Now again half-conscious, he brought the liquor to his lips and let the intoxicant run down the length of his tongue into his parched throat. The warm trickle inside was in stark contrast to the cold of the splattering of the same on his face. He wiped the spray from his face roughly with the sleeve of his shirt.\nThe cold of the evening was beginning to lose its vigour. The single window on the bare walls was suddenly thrown open. The shutter was wrenched open, its stopper sheared clean off, and the cold wind, thick with moisture from the salt ridden seas found its way through. The incessant gale eventually unhinged the shutter and dropped it onto the wooden floor.\nThe lone occupant of the hammock had by then drained the remnants of a second liquor bottle. The black glass of the bottle lay in shards on the floor. There was no one to attend to it. Nor to the shutter for the occupant of the cabin lay in the hammock, unwilling to rise. The movements of the ship was in synchrony with the sway of the hammock. Its user was once again left to his disturbed sleep.\nThe dream was of himself riding on a whaling boat at the bow. He could see his shipmates rowing but their faces he couldn\u0026rsquo;t recognise. Blurred as they were, he ignored them and turned to the mighty whale that they were in pursuit of. Its immense hoary tail was not more than fifteen yards away. He moved to the back of the boat and pulled out one of the three harpoons, its line was uncoiled. It was thrown.\nWithin the next couple of moments the boat began moving faster. The seasickness in him worked its way through the weather beaten skin and conquered his watery soul. The bitter taste in his mouth gave way. Seconds later, he was heaving and involuntarily began to hurl the contents of his intestines and stomach into the sea that frothed in the whale\u0026rsquo;s wake. It was either a wave or a tug from the hoary leviathan but Ahab and his lean, illness-ridden body was flung into the mouth of a whirling mass of water. He couldn\u0026rsquo;t swim. Nor could he feel the wooden prosthetic. The daylight faded and the water enclosed him in its deceptive calm and then he jerked awake lying in a puddle of regurgitated liquor and food. It was frozen. The stump ended at the knee. The matter hair and beard were a tangled disorderly sight.\n","date":"May 1 2012","permalink":"/fiction/2012/05/ahab/","section":"fiction","summary":"","title":"Ahab"},{"content":"","date":null,"permalink":"/fiction/","section":"fiction","summary":"","title":"fiction"},{"content":"What does peregrinator mean? #Firstly, about the name, peregrinator refers to one of two things, both of which I had in mind while selecting the name. I had initially wanted to go with Lammergeier (the German name for the Bearded Vulture) but then it was taken on most platforms. Peregrinator is the subspecies name for the Shaheen Falcon (Falco peregrinus peregrinator — you might have to scroll down here.) It is a beautiful falcon with a dark back and upper-wings, a white throat, and vivid rufous underparts. It has a typical dark \u0026ldquo;helmet\u0026rdquo; as seen in the photo. Juveniles have incomplete hemlets and are a paler shade of rufous. Shaheen Bagh also happens to be the name of the place chosen by the people protesting the unjust implementation of the CAA and NRC in 2019. The word peregrinator itself comes from Latin and is synonymous with traveller or wanderer.\nShaheen Falcon with a Parakeet kill. Photo by Gnanaskandan Kesavabharathi. July 2016, Chennai outskirts. About me #I\u0026rsquo;m a 29 year old, neurodivergent, cat supremacist that sometimes cosplays as an ecologist. I\u0026rsquo;m big on F(L)OSS and currently run a Void Linux installation with a manually compiled version of Emacs 29. I also play the guitar, listen to typically a lot of metal and try to make my own music occasionally. I currently use Ardour 7.0 for audio production, which I\u0026rsquo;m very new to, and hope to get started with the Sonic Pi as both a standalone instrument as well as a synth for instruments I don\u0026rsquo;t play myself.\nThis is a static website and is intended to (eventually) be the home for my blog, Emacs configuration and work updates. I hope to eventually move to or host it there. This website uses a Hugo framework and uses a personalised version of the Congo theme. Everything you see here was written in Org-mode on Emacs, exported to markdown via ox-hugo for better compatibility - the default go-org parser doesn\u0026rsquo;t appear to handle Org syntax adequately. Read more about my blogging flow on my post about it.\nI can be contacted at contact [at] peregrinator.site or through Bluesky [at] peregrinator.site. Support me at buymeacoffee. The source for this website is on my Sourcehut.\nPublications #1. A contribution on morphology and distribution of the Rock Toad Duttaphrynus hololius (Günther, 1876) with first report on deformity, calling and breeding behaviours (Amphibia: Anura: Bufonidae) #July 2020: Asian Journal of Conservation Biology 9(1):71-78\nPrevious Next \u0026nbsp; \u0026nbsp; / [pdf] View the PDF file here. 2. Focal Plant and Neighbourhood Fruit Crop Size Effects on Fruit Removal by Frugivores in a Semi-Arid Landscape Invaded by Lantana camara L. #February 2019: Current Science 116(3):405-411\nPrevious Next \u0026nbsp; \u0026nbsp; / [pdf] View the PDF file here. 3. Discourage voice playbacks in the breeding season #November 2015: Indian BIRDS 10(5):140\nPrevious Next \u0026nbsp; \u0026nbsp; / [pdf] View the PDF file here. 4. Nesting of the Spot-billed Duck Anas poecilorhyncha in Chennai city #June 2015: Indian BIRDS 10(2):55-56\nPrevious Next \u0026nbsp; \u0026nbsp; / [pdf] View the PDF file here. ","date":null,"permalink":"/about/","section":"peregrinator's blog","summary":"","title":"about me"}]